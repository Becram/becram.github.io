<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2018-09-04T07:10:42+05:45</updated><id>http://0.0.0.0:4000/</id><title type="html">Bikram’s Blog</title><subtitle>Linux, security, DevOps stuff</subtitle><author><name>Bikram Dhoju</name><email>itsbecram@gmail.com</email><uri>http://bikramdhoju.com.np</uri></author><entry><title type="html">Setting up Private DNS Server with BIND9 (DNS Series:Part II)</title><link href="http://0.0.0.0:4000/network&system/DNS-Series-2/" rel="alternate" type="text/html" title="Setting up Private DNS Server with BIND9  (DNS Series:Part II)" /><published>2018-06-17T00:00:00+05:45</published><updated>2018-03-21T01:45:58+05:45</updated><id>http://0.0.0.0:4000/network&amp;system/DNS-Series-2</id><content type="html" xml:base="http://0.0.0.0:4000/network&amp;system/DNS-Series-2/">&lt;p&gt;We already dived into the nitty gritty of the theory about what exactly it is, how it works and what are its parts you can read the part one &lt;a href=&quot;http://becram.github.io/network&amp;amp;system/DNS-Series-1/&quot;&gt;here&lt;/a&gt;. In this series, I will be talking about how to set up a private DNS server using &lt;a href=&quot;https://www.isc.org/downloads/bind/&quot;&gt;BIND9&lt;/a&gt;. Before that, I want to focus on Private and Public DNS.&lt;/p&gt;

&lt;p&gt;Like we talked before DNS servers resolve the domain names into IP addresses but there might be the cases that you might have to resolve the domain names to local IPs. For example, let say there is a privately hosted file server in your office network, so you might have to provide domain name of the server instead of providing the IP address. In this case, you might have to create a private DNS server. For the security season it is inadvertently advised to separate private and public DNS server for security and privacy issue, since public exposure of the internal network IPs(or active directory information) to outsiders which might help an attacker compromise the office system.&lt;/p&gt;

&lt;p&gt;Apart from this, there is another method called &lt;a href=&quot;https://en.wikipedia.org/wiki/Split-horizon_DNS&quot;&gt; split-horizon DNS server&lt;/a&gt; DNS server which serves as both public and private DNS server as in it serves different responses depending on the source IP. For example, the DNS server serves example.com or example. local depending upon the public or private request.&lt;/p&gt;

&lt;p&gt;Without further ado lets dive into setting up a private DNS server:&lt;/p&gt;

&lt;h2 id=&quot;infrastructure&quot;&gt;Infrastructure&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SN&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Hostname&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;IP&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;FQDN&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Remarks&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ServerNode&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;10.10.10.10&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ns.test.example.com&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DNS Server&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;FileServerNode&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;10.10.10.11&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;fileserver.test.example.com&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;FileServer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ClientNode&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;10.10.10.9&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;client.test.example.com&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;to test DNS Server&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;installing-bind-on-dns-serversubuntu-node&quot;&gt;Installing BIND on DNS Servers(Ubuntu Node)&lt;/h2&gt;

&lt;h3 id=&quot;on--servernode--update-the-package&quot;&gt;On &lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; serverNode &lt;/span&gt;&lt;/strong&gt; update the package&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now install BIND:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo apt-get install bind9 bind9utils bind9-doc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ipv4-mode&quot;&gt;IPv4 Mode&lt;/h3&gt;

&lt;p&gt;We need to enable bind to run IPv4, so we provide argument -4 in the ExecStart directive in service file &lt;strong&gt;/etc/systemd/system/bind9.service&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;. . .
[Service]
ExecStart=/usr/sbin/named -f -u bind -4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Save and close the editor when you are finished.
Reload the systemd daemon to read the new configuration into the running system:
Restart BIND to implement the changes:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo systemctl daemon-reload
ServerNode$ sudo systemctl restart bind9

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally lets configure our bind:&lt;/p&gt;
&lt;h3 id=&quot;configure-file-namedconfoptions&quot;&gt;Configure file: named.conf.options&lt;/h3&gt;

&lt;p&gt;Lets edit the &lt;code class=&quot;highlighter-rouge&quot;&gt;named.conf.options&lt;/code&gt; file. This file contains the main configuration of the DNS server. We can provide the list of IPs or subnet which can access the the DNS through &lt;code class=&quot;highlighter-rouge&quot;&gt;Access Control list (ACL)&lt;/code&gt;. In our case we only want these three nodes to access our DNS. Edit &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/bind/named.conf.options&lt;/code&gt; as below:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;acl &quot;trusted&quot; {
        10.10.10.10;    # ServerNode - can be set to localhost
        10.10.10.11;    # FileserverNode
        10.10.10.12;    # Client Node
};

options {

...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now that we have our list of trusted DNS clients, we will want to edit the options block. Currently, the start of the block looks like the following:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;. . .
};

options {
      directory &quot;/var/cache/bind&quot;; #/var/cache/bind/ stores all the DNS query information
      recursion yes;                 # enables [recursive] queries
      allow-recursion { trusted; };  # allows recursive queries from &quot;trusted&quot; clients
      listen-on { 10.10.10.10; };   # DNS server private IP address - listen on private network only
      allow-transfer { none; };      # disable zone transfers by default

      forward first;
      forwarders {
            8.8.8.8;
            8.8.4.4;
        };
. . .
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;As you can see that I have set &lt;code class=&quot;highlighter-rouge&quot;&gt;recursion&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;yes&lt;/code&gt;, this means that when your query is recieved by the server it  will do all the job of fetching the answer, and giving it back to you. During this process, the DNS server might also query other DNS server’s in the internet on your behalf, for the answer.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.akadia.com/services/howto_forward_dns.html&quot;&gt;Forward and forwarders:&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The DNS forwarding facility of BIND Version 8 can be used to create a large site-wide cache on a few servers, reducing traffic over links to external nameservers. It can also be used to allow queries by servers that do not have direct access to the Internet, but wish to look up exterior names anyway. Forwarding occurs only on those queries for which the server is not authoritative and does not have the answer in its cache.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Forward&lt;/code&gt; : Causes the the server to query the forwarder first , and if that doesn’t answer the question the server will then look for the answer itself.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Forwarder&lt;/code&gt;: Specifies the IP addresses to be used for forwarding&lt;/p&gt;

&lt;h2 id=&quot;configure-local-file&quot;&gt;Configure Local File&lt;/h2&gt;

&lt;h3 id=&quot;what-are-zones-in-dns&quot;&gt;what are zones in DNS?&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DNS Zone&lt;/code&gt;: DNS zones are the adminstrative portion within DNS.In other words,they are  administrative space which allows for more granular control of DNS components, such as authoritative &lt;a href=&quot;https://www.cloudflare.com/learning/dns/dns-server-types/#authoritative-nameserver&quot;&gt;nameservers&lt;/a&gt;. &lt;a href=&quot;https://www.cloudflare.com/learning/dns/glossary/dns-zone/&quot;&gt;Readmore here&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;configure-file-etcbindnamedconflocal&quot;&gt;Configure file: /etc/bind/named.conf.local&lt;/h3&gt;

&lt;p&gt;To configure zones file, nn ServerNode, open the named.conf.local file for editing:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo vi /etc/bind/named.conf.local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add the forward zone with the following lines (substitute the zone name with your own):
In &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/bind/named.conf.local&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zone &quot;test.example.com&quot; {
    type master;
    file &quot;/etc/bind/zones/db.test.example.com&quot;; # zone file path
};

zone &quot;10.10.10.in-addr.arpa&quot; {     # for reverse query
    type master;
    file &quot;/etc/bind/zones/db.10.10.10&quot;;  # 10.10.10.0/24 subnet
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here zone file db.10.10.10 is for reverse query i.e to get domain name from IP.&lt;/p&gt;

&lt;p&gt;If your servers span multiple private subnets but are in the same datacenter, be sure to specify an additional zone and zone file for each distinct subnet. When you are finished adding all of your desired zones, save and exit the named.conf.local file.&lt;/p&gt;

&lt;p&gt;Now that our zones are specified in BIND, we need to create the corresponding forward and reverse zone files.&lt;/p&gt;
&lt;h3 id=&quot;create-forward-zone-file&quot;&gt;Create Forward Zone File&lt;/h3&gt;

&lt;p&gt;The forward zone file is where we define DNS records for forward DNS lookups. That is, when the DNS receives a name query, “fileserver.test.example.com” for example, it will look in the forward zone file to resolve fileservers’s corresponding private IP address.&lt;/p&gt;

&lt;h3 id=&quot;types-of-dns-records&quot;&gt;Types of DNS records:&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;span style=&quot;color:green&quot;&gt; SOA&lt;/span&gt;: An SOA record or Start of Authority record labels a zone file with the name of the host where it was originally created. Next, it lists the contact email address for the person responsible for the domain. There are also various numbers, which we’ll get into in detail in a moment. First, here’s a typical SOA record:
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@	IN	SOA	ns.test.example.com. admin.test.example.com. (
        3		; Serial
   604800		; Refresh
    86400		; Retry
  2419200		; Expire
   604800 )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;Here’s what the numbers mean:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Serial number: The revision number for this domain’s zone file. It changes when the file gets updated.&lt;/li&gt;
  &lt;li&gt;Refresh time: The amount of time (in seconds) a secondary DNS server will keep the zone file before it checks for changes.&lt;/li&gt;
  &lt;li&gt;Retry time: The amount of time a secondary DNS server will wait before retrying a failed zone file transfer.&lt;/li&gt;
  &lt;li&gt;Expire time: The amount of time a secondary DNS server will wait before expiring its current zone file copy if it cannot update itself.&lt;/li&gt;
  &lt;li&gt;Minimum TTL: The minimum amount of time other servers should keep data cached from this zone file.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;span style=&quot;color:green&quot;&gt;NS&lt;/span&gt;:  NS records or name server records set the nameservers for a domain or subdomain. The primary nameserver records for your domain are set both at your registrar and in your zone file. Typical nameserver records (you need at least two) look like this:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;example.com     NS      ns.test.example.com.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;span style=&quot;color:green&quot;&gt;A and AAAA&lt;/span&gt;: An A record points your domain or subdomain to your servers’s IP address, which allows tracffice to reach your server. This is the core function of DNS. A typical A record looks like either of the following:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;example.com             A      12.34.56.78

test.example.com       A       12.34.56.78
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;An AAAA record is just like an A record, but for IPv6 IP addresses. A typical AAAA record looks like the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;example.com     AAAA        0123:4567:89ab:cdef:0123:4567:89ab:cdef
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;span style=&quot;color:green&quot;&gt;CNAME&lt;/span&gt; : A CNAME record or Canonical Name record matches a domain or subdomain to a different domain. With a CNAME record, DNS lookups use the target domain’s DNS resolution as the alias’s resolution. Here’s an example:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alias.com       CNAME   example.com.
example.com     A       12.34.56.78
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;With this setup, when alias.com is requested, the initial DNS lookup will find the CNAME entry with the target of example.com. A new DNS lookup will be started for example.com, which will find the IP address 12.34.56.78. Finally, visitors to alias.com will be directed to 12.34.56.78.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;span style=&quot;color:green&quot;&gt; PTR&lt;/span&gt;: A PTR record or pointer record matches up an IP address to a domain or subdomain, allowing reverse DNS queries to function. It performs the opposite service an A record does, in that it allows you to look up the domain associated with a particular IP address, instead of vice versa.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;PTR records are usually set with your hosting provider. They are not part of your domain’s zone file. This means that you’ll always set reverse DNS for your Linodes in the Linode Manager, even if your nameservers are elsewhere. Likewise, if you have servers somewhere else but are using Linode’s nameservers, you will still have to set up your PTR records with your hosting provider.&lt;/p&gt;

&lt;p&gt;As a prerequisite for adding a PTR record, you need to create a valid, live A or AAAA record that points the desired domain to that IP. If you want an IPv4 PTR record, point the domain or subdomain to your Linode’s IPv4 address. If you want an IPv6 PTR record, point the domain to your Linode’s IPv6 address. Beyond that, IPv4 and IPv6 PTR records work the same way.&lt;/p&gt;

&lt;p&gt;Apart from these there few other types, namely &lt;a href=&quot;https://www.linode.com/docs/networking/dns/dns-records-an-introduction/#mx&quot;&gt;MX&lt;/a&gt;, &lt;a href=&quot;https://www.linode.com/docs/networking/dns/dns-records-an-introduction/#dkim&quot;&gt;DKIM&lt;/a&gt;,&lt;a href=&quot;https://www.linode.com/docs/networking/dns/dns-records-an-introduction/#axfr&quot;&gt;AXFR&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After that bit of theory, let’s create the directory where our zone files will reside. According to our named.conf.local configuration, that location should be /etc/bind/zones:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo mkdir /etc/bind/zones
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We will base our forward zone file on the sample db.local zone file. Copy it to the proper location with the following commands:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ cd /etc/bind/zones
ServerNode$ sudo cp ../db.local ./db.test.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;configure-file-etcbindzonesdbtestexamplecom&quot;&gt;Configure file: /etc/bind/zones/db.test.example.com&lt;/h3&gt;

&lt;p&gt;Now let’s edit our forward zone file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo vi  /etc/bind/zones/db.test.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;so it look like this&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;;
; BIND data file for local loopback interface
;
$TTL	604800
@	IN	SOA	ns.test.example.com. admin.test.example.com. (
			      3		; Serial
			 604800		; Refresh
			  86400		; Retry
			2419200		; Expire
			 604800 )	; Negative Cache TTL

; name servers - NS records
    IN      NS      ns.test.example.com.



; name servers - A records
ns.test.example.com.          IN      A       10.10.10.10

; 10.128.0.0/16 - A records
fileserver.test.example.com.    IN      A      10.10.10.11
client.test.example.com.        IN      A      10.10.10.12
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;create-reverse-zone-files&quot;&gt;Create Reverse Zone File(s)&lt;/h3&gt;

&lt;h3 id=&quot;configure-file-etcbindzonesdbtestexamplecom-1&quot;&gt;Configure file: /etc/bind/zones/db.test.example.com&lt;/h3&gt;

&lt;p&gt;Similarly you can create reverse DNS Zone file &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/bind/zones/db.10.10.10&lt;/code&gt; as:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$TTL	604800
@	IN	SOA	ns.test.example.com. admin.test.example.com. (
			      3		; Serial
			 604800		; Refresh
			  86400		; Retry
			2419200		; Expire
			 604800 )	; Negative Cache TTL

; name servers - NS records
    IN      NS      ns.test.example.com.



; name servers - A records
10           IN     PTR        ns.test.example.com.       ;10.10.10.10

; 10.128.0.0/16 - A records
11           IN     PTR        filserver.test.example.com.  ;10.10.10.11     
12           IN     PTR        client.test.example.com.     ;10.10.10.12  

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We are almost done with configuring the DNS server. DNS configuration file is very obfuscating at times. It wont be be surprizing to miss some configuration so its a good idea to check if the configuration  has been done correctly or not. For this BIND provides checking mechanism&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo named-checkconf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;check Zone files:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo named-checkzone test.example.com db.test.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Similarly,&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo named-checkzone 10.10.10.in-addr.arpa /etc/bind/zones/db.10.10.10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once that checks out, restart BIND:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo systemctl restart bind9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;testing&quot;&gt;Testing:&lt;/h2&gt;
&lt;p&gt;In order to test our DNS we first need to change the nameserver of the client machine to the DNS server. In ubuntu this can be done by manually editing &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/resov.conf&lt;/code&gt; as&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)
#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
nameserver 10.10.10.10   #DNS Server's ip address
search test.example.com

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you client machine should be able to ping the fileserver host.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vagrant@ClientNode:~$ ping fileserver
PING fileserver.test.example.com (10.10.10.11) 56(84) bytes of data.
64 bytes from filserver.test.example.com (10.10.10.11): icmp_seq=1 ttl=64 time=1.54 ms
64 bytes from filserver.test.example.com (10.10.10.11): icmp_seq=2 ttl=64 time=1.04 ms
64 bytes from filserver.test.example.com (10.10.10.11): icmp_seq=3 ttl=64 time=1.46 ms
64 bytes from filserver.test.example.com (10.10.10.11): icmp_seq=4 ttl=64 time=0.960 ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Voila!!&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;https://www.digitalocean.com/community/tutorials/how-to-configure-bind-as-a-private-network-dns-server-on-ubuntu-16-04
https://www.ntchosting.com/encyclopedia/dns/zone/#The_DNS_zone
https://www.linode.com/docs/networking/dns/dns-records-an-introduction/#dkim
https://www.slashroot.in/difference-between-iterative-and-recursive-dns-query&lt;/p&gt;</content><author><name>Bikram Dhoju</name><email>itsbecram@gmail.com</email><uri>http://bikramdhoju.com.np</uri></author><category term="Internet" /><category term="DNS" /><category term="Javascript" /><summary type="html">We already dived into the nitty gritty of the theory about what exactly it is, how it works and what are its parts you can read the part one here. In this series, I will be talking about how to set up a private DNS server using BIND9. Before that, I want to focus on Private and Public DNS.</summary></entry><entry><title type="html">DNS :Introduction (DNS Series:Part I)</title><link href="http://0.0.0.0:4000/network&system/DNS-Series-1/" rel="alternate" type="text/html" title="DNS :Introduction (DNS Series:Part I)" /><published>2018-06-17T00:00:00+05:45</published><updated>2018-03-21T01:45:58+05:45</updated><id>http://0.0.0.0:4000/network&amp;system/DNS-Series-1</id><content type="html" xml:base="http://0.0.0.0:4000/network&amp;system/DNS-Series-1/">&lt;p&gt;There are many servers all over the world. Every server has a unique IP Address and is identified by that IP Address. That brings us to the bulk of the IP address. And you the p&lt;a href=&quot;http://www.thememoryinstitute.com/remembering-numbers.html&quot;&gt;problem with numbers they hard to remember&lt;/a&gt; due to their intangibility, the human has always struggled to come with the ways of avoiding the problem of remembering them. Long story short, remembering www.google.com is far easier than remembering 74.125.24.139 unless you are suffering from &lt;a href=&quot;http://hyperthymesia.net/hyperthymesia/&quot;&gt;Hyperthymesia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When you visit https://google.com in a browser, your computer uses DNS to retrieve the website’s IP address of 74.125.24.139, in just a split of a second. Without DNS, you would only be able to visit Google’s website (or any website) by visiting its IP address directly, such as http://74.125.24.139. Hence, DNS is fundamentally the backbone bone of the internet.&lt;/p&gt;

&lt;h2 id=&quot;so-what-eactly-is-dns&quot;&gt;So, what eactly is DNS?&lt;/h2&gt;

&lt;p&gt;Remember how you used to have those phonebook diaries where you put the name and phone number corresponding to them. This diary acts like a map for the name to corresponding phones. DNS is like a phone book for the internet. If you know a person’s name but don’t know their telephone number, you can simply look it up in a phone book. DNS provides this same service to the internet, of course, they are much more complex then phonebook but at a basic level, they have the same function.&lt;/p&gt;

&lt;p&gt;When you visit https://google.com in a browser, your computer uses DNS to retrieve the website’s IP address of 74.125.24.139, in just a split of second. Without DNS, you would only be able to visit google’s website (or any website) by visiting its IP address directly, such as http://74.125.24.139.&lt;/p&gt;

&lt;p&gt;Hence, DNS is fundamentally the backbone bone of the internet.&lt;/p&gt;

&lt;h2 id=&quot;why-dns-is-important&quot;&gt;Why DNS Is Important?&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Web browsers interact through Internet Protocol (IP) addresses.&lt;/li&gt;
  &lt;li&gt;Elimination of the need for humans to memorize complex IP addresses.&lt;/li&gt;
  &lt;li&gt;For many reasons, server’s ip needs to be changed, so DNS helps in eliminating those problem of working about any changes in underlying system.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;## DNS hierachy&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.dailywebsolutions.com/images/DNS-hierarchy.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-1-root-level--zone-servers-&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; 1. Root Level / zone servers &lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;It is the highest level in DNS hierarchy. The first step in resolving the domain name is root servers. It provides a list of authoritative name servers for top level domain (TLD). These servers have the list of all top level domains (TLDs). There are 13 root DNS servers all over the world. These root servers are named as A-root server, B-root server and so on upto K-root server. Root servers hold the information of each TLD that where is it located and what is its IP Address.&lt;/p&gt;

&lt;p&gt;If you want more information about root servers that where are they located and who owns them or any other info, then you need to go http://www.root-servers.org.&lt;/p&gt;

&lt;h3 id=&quot;-2-top-level-domains-tld&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; 2. Top Level Domains (TLD)&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;TLD is at the 2nd highest level domains in the hierarchical Domain Name System of the Internet. Top level domains are .com, .org, .edu etc. It will make more sense, if you take a look at DNS hierarchy diagram.&lt;/p&gt;

&lt;h3 id=&quot;-3-second-level-domains&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; 3. Second Level domains&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;It is 3rd level in the hierarchical Domain Name System of the internet. It is directly below the TLD. dailywebsolutions.com is an example of second level domains because it is directly below .com TLD.&lt;/p&gt;

&lt;h3 id=&quot;-4-sub-domain&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; 4. Sub-Domain&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Sub domain is considered as the part of the second level domains. Let’s consider mail.dailywebsolutions.com, here mail is the sub domain of a 2nd level domain dailywebsolutions and .com is the TLD.&lt;/p&gt;

&lt;h2 id=&quot;how-dns-works&quot;&gt;How DNS works?&lt;/h2&gt;

&lt;h3 id=&quot;-step-1-request-information-&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; Step 1: Request information &lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The process begins when you ask your computer to resolve a hostname, such as visiting https://dyn.com. The first place your computer looks for the corresponding IP address is its local DNS cache, which stores information that your computer has recently retrieved.&lt;/p&gt;

&lt;p&gt;If your computer doesn’t already know the answer, it needs to perform a DNS query to find out.&lt;/p&gt;

&lt;h3 id=&quot;-step-2-ask-the-recursive-dns-servers&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; Step 2: Ask the recursive DNS servers&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;If the information is not stored locally, your computer queries (contacts) the recursive DNS servers (resolvers) from your internet service provider (ISP). These specialized computers perform the legwork of a DNS query on your behalf. Resolvers have their own caches, and given that many of the ISP’s customers are using the same resolvers, there is a reasonable chance that popular domains will already be cached. If this is the case for our example, dyn.com, the process usually ends here and the information is returned to the user.&lt;/p&gt;

&lt;p&gt;Just about every ISP runs their own resolvers, yet those aren’t necessarily what you could be using. Some companies and perhaps even technically sophisticated home users could run their own resolvers on site. Additionally, there are several very popular open resolvers available, including Google Public DNS, OpenDNS, Dyn Recursive DNS, and Quad9.&lt;/p&gt;

&lt;h3 id=&quot;-step-3-ask-the-root-name-servers&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; Step 3: Ask the root name servers&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;If the recursive servers don’t have the answer, they query the root name servers. A name server is a computer that answers questions about domain names, such as IP addresses. These 13 servers act as a kind of telephone switchboard for DNS. They don’t know the answer, but they can direct DNS queries to someone that knows where to find it.&lt;/p&gt;

&lt;h3 id=&quot;-step-4-ask-the-tld-name-servers-&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; Step 4: Ask the TLD name servers &lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The root name servers will look at the first part of our request, reading from right to left — www.dyn.com — and in our case, direct our query to the top-level domain (TLD) name servers for .com. Each TLD, such as those for .com, .org, and .us, has its own set of name servers, which act like a receptionist for each TLD. These servers don’t have the information we need, but they can refer us directly to the servers that do have the information.&lt;/p&gt;

&lt;h3 id=&quot;-step-5-ask-the-authoritative-dns-servers&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; Step 5: Ask the authoritative DNS servers&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The TLD name servers review the next part of our request — www.dyn.com — and direct our query to the name servers responsible for this specific domain. These authoritative name servers are responsible for knowing all the information about a specific domain, which is stored in DNS records. There are many types of records, which each contain a different kind of information.&lt;/p&gt;

&lt;p&gt;In this example, we want to know the IP address for www.dyn.com, so we ask the authoritative name server for the address record (A record). Some authoritative name servers have intelligence that can analyze an incoming DNS query and return a response that is more performant for the user that originated the query.&lt;/p&gt;

&lt;h3 id=&quot;-step-6-retrieve-the-record&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; Step 6: Retrieve the record&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The recursive server retrieves the A record for dyn.com from the authoritative name servers and stores the record in its local cache. If anyone else requests the host record for dyn.com, the recursive server will already have the answer and will not need to go through the lookup process again. All records have a time-to-live value, which is like an expiration date. After a while, the recursive server will need to ask for a new copy of the record to make sure the information doesn’t become out-of-date.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; Step 7: Receive the answer&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Armed with the answer, recursive server returns the A record back to your computer. Your computer stores the record in its cache, reads the IP address from the record, then passes this information to your browser. The browser then opens a connection to the webserver and receives the website.&lt;/p&gt;

&lt;p&gt;This entire process, from start to finish, takes only milliseconds to complete.&lt;/p&gt;

&lt;p&gt;More:  https://www.verisign.com/en_US/website-presence/online/how-dns-works/index.xhtml gives more interactive way to understand DNS&lt;/p&gt;

&lt;h2 id=&quot;-referencesspan&quot;&gt;**&lt;span style=&quot;color:green&quot;&gt; References/span&amp;gt;**&lt;/span&gt;&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;https://dyn.com/blog/dns-why-its-important-how-it-works/&lt;/li&gt;
  &lt;li&gt;http://www.dailywebsolutions.com/what-is-DNS-and-DNS-hierarchy&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Bikram Dhoju</name><email>itsbecram@gmail.com</email><uri>http://bikramdhoju.com.np</uri></author><category term="Internet" /><category term="DNS" /><category term="Javascript" /><summary type="html">There are many servers all over the world. Every server has a unique IP Address and is identified by that IP Address. That brings us to the bulk of the IP address. And you the pproblem with numbers they hard to remember due to their intangibility, the human has always struggled to come with the ways of avoiding the problem of remembering them. Long story short, remembering www.google.com is far easier than remembering 74.125.24.139 unless you are suffering from Hyperthymesia.</summary></entry><entry><title type="html">Bringing Raspberry Pi to Classroom</title><link href="http://0.0.0.0:4000/edtech/Bringing-RPi-to-Classroom/" rel="alternate" type="text/html" title="Bringing Raspberry Pi to Classroom" /><published>2018-02-16T00:00:00+05:45</published><updated>2018-03-21T01:45:58+05:45</updated><id>http://0.0.0.0:4000/edtech/Bringing-RPi-to-Classroom</id><content type="html" xml:base="http://0.0.0.0:4000/edtech/Bringing-RPi-to-Classroom/">&lt;p&gt;There is so much going on in technology these days. Technology has brought unprecedented changes in our daily life, retooling the way we communicate, the way we shop, the way we make our living and more. The things that were considered as science-fiction a few years ago, is now a real thing. But, compare the classrooms back in the 90s and now, do you see any change? For the major part, it’s more or less the same. It’s a no-brainer that we have been scared to adopt new technology to our classrooms. It is said that Socrates was scared of this new technology called “writing” which he thought would erode the memorizing power of human. There was a time when people were intimidated by the use of the calculator in the class, for it may jeopardize the calculating power of the human brain. Nevertheless, we cannot overlook the fact of how technology can be leveraged to extend the knowledge imparting process, for education today is not about what-you-know, but what you can do with what-you-know. With growing MOOCs and learning materials available over the Internet, that are not only adding the new dimension in learning today, but also making the learning process more fun. Also, the students today are more adept in using technology, so taking technology out of the learning equation would be alienating the student of their abilities.&lt;/p&gt;

&lt;p&gt;At &lt;a href=&quot;http://olenepal.org&quot;&gt;OLE Nepal&lt;/a&gt;, we strive to bring the best new technology to our classrooms. It’s never easy to embrace a new piece of technology, for teachers are resistant to the change, with factors like power cuts and budget making up a huge share of challenge. So we set our selection of the technology based on the 3 prime constraints; low-powered, portable, and low cost. And for these traits, Raspberry Pi steps up as the knight in shining armor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*xnQWux2pqa2H1qPDi-f4_w.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Produced in Cambridge, &lt;a href=&quot;https://en.wikipedia.org/wiki/Raspberry_Pi&quot;&gt;Raspberry Pi&lt;/a&gt; primarily designed to demystify the technology in the classrooms for the learners, is a credit-card sized computer that costs only $35. The device plugs into a computer monitor or TV, and uses a standard keyboard and mouse. You can use this mini computer just like you would your desktop computer to do everything from browsing the Internet and playing high-definition video, to making spreadsheets, word-processing, or playing games.&lt;/p&gt;

&lt;h2 id=&quot;how-is-ole-nepal-using-raspberry-pi&quot;&gt;How is OLE Nepal using Raspberry Pi?&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*_0sm75N6aVaoBRVWxfGAlQ.png&quot; alt=&quot;Typical E-Pustakalaya lab setup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Predominantly we build Pustakalaya Server, which is typically a mini PC, hosting educational contents major section which is the &lt;a href=&quot;http://www.olenepal.org/E-Pustakalaya/&quot;&gt;E-Pustakalaya&lt;/a&gt; , which is digital library of more than 7000+ books of different genre build on the FEDORA (or Flexible Extensible Digital Object Repository Architecture) digital asset management (DAM) architecture upon which institutional repositories, digital archives, and digital library systems are built. We also have added to it our home-brewed, curriculum-based interactive teaching material; &lt;a href=&quot;http://www.olenepal.org/E-Paath/&quot;&gt;E-Paath&lt;/a&gt;, off-line Khan Academy videos, Open-street map, Nepali Sabdakosh, &lt;a href=&quot;https://phet.colorado.edu/en/simulations/&quot;&gt;PheT simulations&lt;/a&gt; and much more, with a regular update to books and educational content. Basically, Pustakalaya Server is the offline version of the pustakalaya.org. It’s more like bringing the Internet to your classroom.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*DE2qHIwaXbZspeF_4Z3s7A.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After successful implementation of the &lt;a href=&quot;http://wiki.laptop.org/go/The_OLPC_Wiki&quot;&gt;XO&lt;/a&gt; and desktops computer as the client machine, Raspberry Pi, with its amazing community, is a pertinent technology to bring in our classrooms. We have been tinkering the popular Debian-based Linux-distro, Ubuntu-Mate. With its active popular community, it is best OS to our option. We have preloaded E-Paath content into the OS itself. Since most of the activities in our E-Paath are currently flash based; flash support was an important feature to have in the OS. Debian-based OS have much better flash support, it was another reason why Ubuntu-Mate was used. We also have loaded &lt;a href=&quot;http://pustakalaya.org/external-content/static/balpathmala/&quot;&gt;BalPaathmala&lt;/a&gt;, which is a small repository of the books, into the OS hosted on Apache web server. We have been customizing the OS to make it more educational with the interactive games. Our work so far is just a tip of an iceberg.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*nO4BiJ7KvfrrB_WaVLWafA.png&quot; alt=&quot;Raspberry Pi Desktop&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*0zby0zK0tdk-35nBfX0xkg.png&quot; alt=&quot;Class 7–8 EPaath interface&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Some of the features we are currently working on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Synchronization with Server.&lt;/li&gt;
  &lt;li&gt;Student activity statistics collection in Server.&lt;/li&gt;
  &lt;li&gt;Auto-running mount scripts.&lt;/li&gt;
  &lt;li&gt;Using docker or lxc containers for the installation and upgrades.&lt;/li&gt;
  &lt;li&gt;Awstats collection&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;where-is-this-being-implemented&quot;&gt;Where is this being implemented?&lt;/h2&gt;

&lt;p&gt;We have initiated a pilot program at Gorakhnath Secondary School, Kirtipur,Nepal, where 18 Raspberry Pi with preloaded educational content was deployed. It was a challenging experience as it was a-first-of-its-kind of deployment for us. We had a 5-day training for the teachers about pedagogy as well as the technical aspects of using the Raspberry Pi in the classroom. The primary purpose of the training was to inculcate, amongst the teachers, a culture of referring to additional reference materials. Looking at the excitement of the teachers, its just seems that ‘direction’ and ‘training’ were what was stopping technology from getting into their classrooms. We also installed the battery backup system for an uninterrupted flux of the lab. We are regularly providing technical support for the class as this is a pilot project for us.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*vhdX4aNtKnP8Au-tOV3Kkg.jpeg&quot; alt=&quot;Students taking EPaath Class&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*RoCBe-ivsq11PeuxVbo1vQ.jpeg&quot; alt=&quot;Raspberry Pi Lab Setup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Originally published in &lt;a href=&quot;http://blog.olenepal.org/index.php/archives/2067&quot;&gt;OLE-Blog&lt;/a&gt;. If you like what you read please follow.&lt;/p&gt;</content><author><name>Bikram Dhoju</name><email>itsbecram@gmail.com</email><uri>http://bikramdhoju.com.np</uri></author><category term="RaspberryPi" /><summary type="html">There is so much going on in technology these days. Technology has brought unprecedented changes in our daily life, retooling the way we communicate, the way we shop, the way we make our living and more. The things that were considered as science-fiction a few years ago, is now a real thing. But, compare the classrooms back in the 90s and now, do you see any change? For the major part, it’s more or less the same. It’s a no-brainer that we have been scared to adopt new technology to our classrooms. It is said that Socrates was scared of this new technology called “writing” which he thought would erode the memorizing power of human. There was a time when people were intimidated by the use of the calculator in the class, for it may jeopardize the calculating power of the human brain. Nevertheless, we cannot overlook the fact of how technology can be leveraged to extend the knowledge imparting process, for education today is not about what-you-know, but what you can do with what-you-know. With growing MOOCs and learning materials available over the Internet, that are not only adding the new dimension in learning today, but also making the learning process more fun. Also, the students today are more adept in using technology, so taking technology out of the learning equation would be alienating the student of their abilities.</summary></entry><entry><title type="html">Intrusion Dectection system with Fail2ban</title><link href="http://0.0.0.0:4000/network&system/Intrusion-Detection-System-with-Fail2Ban/" rel="alternate" type="text/html" title="Intrusion Dectection system with Fail2ban" /><published>2017-10-12T00:00:00+05:45</published><updated>2018-03-21T01:45:58+05:45</updated><id>http://0.0.0.0:4000/network&amp;system/Intrusion-Detection-System-with-Fail2Ban</id><content type="html" xml:base="http://0.0.0.0:4000/network&amp;system/Intrusion-Detection-System-with-Fail2Ban/">&lt;p&gt;Install and configure fail2ban to stop some hacking/DOS (Denial of Service) attempts on Pustakalaya Server. As this site’s been hit by the occasional DOS from people with an axe to grind and too much time on their hands,fail2ban is lifesaver. Please follow the steps below:&lt;/p&gt;

&lt;h2 id=&quot;step-1-installation&quot;&gt;Step 1: Installation&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Install fail2ban through the method of your choice.&lt;/li&gt;
  &lt;li&gt;Edit the file /etc/fail2ban/jail.local and add the following section: {if jail.local not present then create it}
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;enabled = true
port = http,https
filter = http-get-dos
logpath = /var/log/apache2/access.log
# maxretry is how many GETs we can have in the findtime period before getting narky
maxretry = 300
# findtime is the time period in seconds in which we're counting &quot;retries&quot; (300 seconds = 5 mins)
findtime = 300
# bantime is how long we should drop incoming GET requests for a given IP for, in this case it's 5 minutes
bantime = 300
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Now we need to create the filter file, so create the file /etc/fail2ban/filters.d/http-get-dos.conf and place the following contents in it:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; #
   # Author: http://www.go2linux.org
   #
   [Definition]

   # Option: failregex
   # Note: This regex will match any GET entry in your logs, so basically all valid and not valid entries are a match.
   # You should set up in the jail.conf file, the maxretry and findtime carefully in order to avoid false positives.

   failregex = ^&amp;lt;HOST&amp;gt; -.*&quot;(GET|POST).*

   # Option: ignoreregex
   # Notes.: regex to ignore. If this regex matches, the line is ignored.
   # Values: TEXT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Now we just need to restart fail2ban for the new jail &amp;amp; filter to come into affect:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   /etc/init.d/fail2ban restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-2-testing&quot;&gt;Step 2: Testing&lt;/h2&gt;

&lt;p&gt;If you want to test if it’s really working, a nice way to do so is to use ab (Apache Benchmark – part of the apache2-utils package), like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ab -n 500 -c 10 http://your-web-site-dot-com/

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will kick off 500 page-loads in 10 concurrent connections against your site. When the ban kicks in the page-loads will stop (as incoming GET requests from your IP will be dropped), then when the bantime expires you’ll be able to access the site again. If you then take a look in your /var/log/fail2ban.log file you should see something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2013-06-22 05:37:21,943 fail2ban.actions: WARNING [http-get-dos] Ban YOUR_IP_ADDRESS
2013-06-22 05:42:22,341 fail2ban.actions: WARNING [http-get-dos] Unban YOUR_IP_ADDRESS
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Bikram Dhoju</name><email>itsbecram@gmail.com</email><uri>http://bikramdhoju.com.np</uri></author><category term="security" /><summary type="html">Install and configure fail2ban to stop some hacking/DOS (Denial of Service) attempts on Pustakalaya Server. As this site’s been hit by the occasional DOS from people with an axe to grind and too much time on their hands,fail2ban is lifesaver. Please follow the steps below:</summary></entry><entry><title type="html">Let’s boost the web:Does speed of your website really matter?</title><link href="http://0.0.0.0:4000/web/Lets-Boost-the-web/" rel="alternate" type="text/html" title="Let’s boost the web:Does speed of your website really matter?" /><published>2016-08-22T00:00:00+05:45</published><updated>2018-03-21T01:45:58+05:45</updated><id>http://0.0.0.0:4000/web/Lets-Boost-the-web</id><content type="html" xml:base="http://0.0.0.0:4000/web/Lets-Boost-the-web/">&lt;p&gt;It’s a no-brainer: slow web performance torments every internet user. Before I dig deep into unveiling the bottlenecks of your web performance, it’s really important to estimate the cost of your performance, and there is no better way to articulate the cost of performance better than the old story of Amazon reporting increased revenue of 1% for every 100 milliseconds improvement to their site speed. source: &lt;a href=&quot;http://sites.google.com/site/glinden/Home/StanfordDataMining.2006-11-28.ppt&quot;&gt;Amazon&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/boostweb/giphy.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From the user perspective, see how facebook’s instant article intrigues you to click the article more reflexively than any other article taking ages to load. Though there is the cost for performance enhancement; development cost but it won’t cost you a fortune to assimilate trivial practices which mitigate web load time of your website.&lt;/p&gt;

&lt;h2 id=&quot;1-reduce-http-requests&quot;&gt;1. Reduce HTTP requests&lt;/h2&gt;

&lt;p&gt;Primarily every web pages comprise of the images, stylesheets, flash ,scripts etc. For each of these components HTTP requests are made, so adding more number of images and scripts prolongs the avail of the contents. These round trips are the main reason for slow web pages.Most developers choose to add images instead of the CSS (though sometimes it may not be feasible) but this may add much more load for the web server and web performance may be hindered. Choosing images against CSS can stack you much of the performance tax and from the user perspective, faster web is much delightful than sluggish but attractive designs for user experience (UX) does matters. 
 There are multiple ways we can reduce this&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://css-tricks.com/css-sprites/&quot;&gt;Sprites&lt;/a&gt; are the cool way to reduce image numbers.&lt;/li&gt;
  &lt;li&gt;Combine multiple style sheets into one.&lt;/li&gt;
  &lt;li&gt;Reduce scripts and put them at the bottom of the page.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-progressive-rendering&quot;&gt;2. Progressive rendering&lt;/h2&gt;

&lt;p&gt;Though lightening speed would be great but till we reach there giving something for the user so that they can get busy, can help remove the anxiety of sluggishness. For this progressive rendering is the killer ( but under appreciated ) weapon.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*wkTkbzLrrrhy1MNtW9xulA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Though the page may be heavier but putting something for them on the plate may trick them to think page as faster.Amazon does an excellent job with progressive rendering. Who knows, had they focused on mere fast loading they could have been out of business.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*PwIgDTWHCeHbdiOUbQ0qSA.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-add-a-load-balancer-and-reverse-proxy-server&quot;&gt;3. Add a Load Balancer and Reverse Proxy Server&lt;/h2&gt;

&lt;p&gt;Load balancing is a technique aiming at distributing workload in a computer network, in order to optimally utilize resources, avoid overload and maximize throughput. Instead of adding multiple tasks to a single server we add a load balancer server to distribute the load across multiple servers. Even if your application is written poorly load balancer can enhance the user experience.&lt;/p&gt;

&lt;p&gt;A load balancer server is simply a reverse proxy server; it receives the internet traffic and forwards the requests to another server. Load balancer acts as the relay station to route the traffic.The trick is load balancer supports two or more application server with the proper choice of an algorithm the traffic can be routed to the next server. Most popularly, round-robin approach is used in which the load balancer forward the traffic to next server in the list. Load balancers can lead to much better improvements in performance because they prevent one server from being overloaded while other servers wait for traffic.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*5oMXVu17JA7oEs11YJgWXA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Popular web servers like Apache and NGINX has inbuilt load balancing capabilities. A brief tutorial on Load Balancing can be found &lt;a href=&quot;http://websistent.com/configure-apache-web-server-load-balancing/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;4-caching&quot;&gt;4. Caching&lt;/h2&gt;

&lt;p&gt;As mentioned earlier too much of HTTP requests costs the web performance; hence, it would enhance the performance if we could store the most frequently used contents in a way that it could be easily be accessed. Apache and NGINX come with sophisticated and scalable caching mechanism. &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-configure-apache-content-caching-on-ubuntu-14-04&quot;&gt;Caching&lt;/a&gt; can be broadly divided into three categories which can be broken down as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;File Caching: The most basic caching strategy, this simply opens files or file descriptors when the server starts and keeps them available to speed up access.&lt;/li&gt;
  &lt;li&gt;Key-Value Caching: Mainly used for SSL and authentication caching, key-value caching uses a shared object model that can store items which are costly to compute repeatedly.&lt;/li&gt;
  &lt;li&gt;Standard HTTP caching: The most flexible and generally useful caching mechanism, this three-state system can store responses and validate them when they expire. This can be configured for performance or flexibility depending on your specific needs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At browser level when someone visits your website for the first time they need to download the web contents but caching enhances the subsequent browsing for it cuts off HTTP requests . As &lt;a href=&quot;http://yuiblog.com/blog/2007/01/04/performance-research-part-2/&quot;&gt;Tenni Theurer&lt;/a&gt;, formerly of Yahoo, explains it…&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The first time someone comes to your website, they have to download the HTML document, stylesheets, javascript files and images before being able to use your page. That may be as many as 30 components and 2.4 seconds.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*Mc5doNxCamCwNCCjRlxX1Q.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Once the page has been loaded and the different components stored in the user’s cache, only a few components needs to be downloaded for subsequent visits. In Theurer’s test, that was just three components and .9 seconds, which shaved nearly 2 seconds off the load time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*VAqawvqJjJ6f8st_R2m-Aw.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;5-reduce-dns-lookups&quot;&gt;5. Reduce DNS Lookups&lt;/h2&gt;

&lt;p&gt;To put in laymen’s term DNS is server responsible for converting the domain main into its corresponding IP address like converting google.com to 120.89.97.42. DNS lookup takes place even before the web page loads so the size of the page do not affect the load time.Typically you can use your ISP’s DNS server but however other options as OpenDNS and Google’s DNS is also available; you can test and switch as suitable for you.&lt;/p&gt;

&lt;h2 id=&quot;6-optimize-images-and-minify-resources&quot;&gt;6. Optimize Images and Minify resources&lt;/h2&gt;

&lt;p&gt;Though adding images to web pages are not encouraged but many times its really needed to. So image should be compressed to best possible size. There are variety of image compressing sites as &lt;a href=&quot;https://imageoptim.com/&quot;&gt;ImageOptim&lt;/a&gt;, &lt;a href=&quot;https://pnggauntlet.com/&quot;&gt;PNG Gauntlet&lt;/a&gt;, &lt;a href=&quot;http://jpeg-optimizer.com/&quot;&gt;JPEG Optimizer&lt;/a&gt; and &lt;a href=&quot;https://tinypng.com/&quot;&gt;TinyPNG&lt;/a&gt;. Images should be sized correctly. That is, if you are displaying a 200×200 image, then don’t display a 400×400 at 200×200 size. There is no point in sending a bigger image if it is not going to be displayed, or if it’s not going to fit on a device’s screen.&lt;/p&gt;

&lt;p&gt;Minification is the process of reducing file size by removing unnecessary characters such as whitespace, new line characters, comments. The unnecessary characters call for unnecessary HTTP requests so minification is very important . In many cases file sizes can drop by significant level through minification, thus speeding up content delivery and processing. You should minify all your JavaScript, CSS, and HTML files. There are many minification tools to try for different file types, for example, these for HTML:www.willpeavy.com/minifier and kangax.github.io/html-minifier.&lt;/p&gt;

&lt;h2 id=&quot;what-else-can-you-do-&quot;&gt;What else can you do ?&lt;/h2&gt;

&lt;p&gt;I run a simple test on WebPage test with pustakalaya.org to get the result as :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*Ay5GhA_iIG8CRE5fBBvBLA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see in the figure the span in green as Time to First Byte (TTFB) takes up a significant part of the server response. That may have hit your nerve, so it’s very important to minimize this time. This time, varies according to your location from the server for it represents the route of the traffic. Particularly Waiting (TTFB) represents a number of things, like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Server response time&lt;/li&gt;
  &lt;li&gt;Time to transfer bytes (a.k.a latency of the round-trip)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Internet can be pretty fast depending on the location and network , you are using, which is dictated by the distance the packets have to travel. According to &lt;a href=&quot;http://chimera.labs.oreilly.com/books/1230000000545/ch01.html#PROPAGATION_LATENCY&quot;&gt;Ilya Grigorik&lt;/a&gt;, we’re already quite close to the speed of light so we shouldn’t expect more speed there unless we bend physics. The way to speed things up, then, is to shorten distances. Depending on the user you have to locate the server if a bulk of the users is from Nepal than it wouldn’t be wise to place your server in United states.&lt;/p&gt;

&lt;p&gt;So the bottom line its hard to focus on these things with approaching deadline and many bugs to fix but in the long run these practices can definitely boost your result.&lt;/p&gt;</content><author><name>Bikram Dhoju</name><email>itsbecram@gmail.com</email><uri>http://bikramdhoju.com.np</uri></author><category term="Web Developemt" /><category term="Javascript" /><summary type="html">It’s a no-brainer: slow web performance torments every internet user. Before I dig deep into unveiling the bottlenecks of your web performance, it’s really important to estimate the cost of your performance, and there is no better way to articulate the cost of performance better than the old story of Amazon reporting increased revenue of 1% for every 100 milliseconds improvement to their site speed. source: Amazon.</summary></entry></feed>