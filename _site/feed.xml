<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2022-05-08T09:17:05+00:00</updated><id>http://0.0.0.0:4000/</id><title type="html">Bikram’s Blog</title><subtitle>Linux, security, DevOps stuff</subtitle><author><name>Bikram Dhoju</name><email>bikram.dhoju@gmail.com</email><uri>https://bdhoju.com</uri></author><entry><title type="html">Building Kubernetes Admission Webhooks (Part 2 of 2)</title><link href="http://0.0.0.0:4000/devops/Building-Kubernetes-Admission-Webhooks-pt-2/" rel="alternate" type="text/html" title="Building Kubernetes Admission Webhooks (Part 2 of 2)" /><published>2022-05-06T00:00:00+00:00</published><updated>2022-05-07T20:00:58+00:00</updated><id>http://0.0.0.0:4000/devops/Building-Kubernetes-Admission-Webhooks-pt-2</id><content type="html" xml:base="http://0.0.0.0:4000/devops/Building-Kubernetes-Admission-Webhooks-pt-2/">&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;SN&lt;/th&gt;
      &lt;th&gt;Stack&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Technology&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Language&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Golang&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Orchestrator&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Kubernetes(KinD)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;If you have used Kubernetes for a while it is not hard to notice that most services use admission webhooks profusely. For instance, if you use &lt;a href=&quot;https://kubernetes.github.io/ingress-nginx/&quot;&gt;nginx-ingress-controller&lt;/a&gt; you will notice it deploys a webhook to detect the ingress resources and modify the &lt;code class=&quot;highlighter-rouge&quot;&gt;Nginx configuration&lt;/code&gt; based on the resource annotations. Hence, admission webhooks are a pretty powerful feature in the Kubernetes. With the extendibility of the API in Kubernetes, users can create their webhooks to modify/validate the resources before they are applied to the cluster. This becomes very handy to maintain the sanity in your cluster.&lt;/p&gt;

&lt;p&gt;From &lt;a href=&quot;https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/&quot;&gt;offical docs&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;What are admission webhooks? &lt;br /&gt;
Admission webhooks are HTTP callbacks that receive admission requests and do something with them. You can define two types of admission webhooks, validating admission webhook and mutating admission webhook. Mutating admission webhooks are invoked first, and can modify objects sent to the API server to enforce custom defaults. After all object modifications are complete, and after the incoming object is validated by the API server, validating admission webhooks are invoked and can reject requests to enforce custom policies.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For this series of the custom webhooks we going to write a webhooks to perform the following actions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Check for the image tag of the pod (validation)&lt;/li&gt;
  &lt;li&gt;Check and mutate if the pod doesn’t have any resource request and limits defined(mutation)&lt;/li&gt;
  &lt;li&gt;Inject environment variables to containers (mutation)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is the basic architecture of how the webhooks work:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/1600/1*kJWPA3feWUSeF_AhcR4-zQ.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In nutshell, when you request for the new resource (pod in our case) to be created and if the pod has a predefined label, webhooks will pick the request and pass the request to the admission controller, and the admission controller directs the service to the external service for necessary changes, which will create a new patch. This patch is validated and then applied to the cluster to persist.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Please the complete code for this series of tutorials at &lt;a href=&quot;https://github.com/Becram/kubernetes-webhook&quot;&gt;https://github.com/Becram/kubernetes-webhook&lt;/a&gt;. I am a newbie to Golang and haven’t written any tests.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I will not explain each part of the code but will try to explain the most important parts. Also, please note that we will use a lot of the modules and data structure from part 1 of the series.&lt;/p&gt;

&lt;p&gt;First, we need to create a mutating webhook admission resource in our cluster, which is the resource in the cluster that defines how to pick the resource of mutation/validation and where to route the request for the modification.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;admissionregistration.k8s.io/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MutatingWebhookConfiguration&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;kubernetes-webhook.acme.com&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;webhooks&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;kubernetes-webhook.acme.com&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;objectSelector&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;matchLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;mutation-check&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;enabled&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;apiGroups&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;apiVersions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v1&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;CREATE&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pods&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;clientConfig&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;default&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kubernetes-webhook&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/mutate-pods&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;443&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;caBundle&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;DEDACTED&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;admissionReviewVersions&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;v1&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;sideEffects&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;None&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;timeoutSeconds&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here, the clientConfig Part defines to route the request (kubernetes-webhook in this example)if the object has the label &lt;code class=&quot;highlighter-rouge&quot;&gt;mutation-check: enabled&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: Please note this request has to be a secured connection for which we need to create a &lt;code class=&quot;highlighter-rouge&quot;&gt;CA-signed certificate&lt;/code&gt;, which can be generated with a script in the repo. skipped for brevity.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Of the three functions of this Golang-based service, lets me dive into the function of adding the container resource request and limit.&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;// Mutate returns a new mutated pod according to lifespan tolerations rules&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mpl&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;containerResources&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mutate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corev1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corev1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WithField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mutation&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mpod&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DeepCopy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parseResources&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corev1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tn&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corev1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ResourceRequirements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Limits&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Limits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mpod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Containers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WithField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;applying default limits and request resource&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

		&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mpod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Containers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Resources&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tn&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

	&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mpod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As discussed in part one we use corev1.Pod struct get the pod definition and modify/append the additional configuation to it. Here first we get the default resources defined and create a container resource definition variable &lt;code class=&quot;highlighter-rouge&quot;&gt;tn&lt;/code&gt; (note is used &lt;code class=&quot;highlighter-rouge&quot;&gt;corev1.ResourceRequirements&lt;/code&gt; struct). After we get the resource we append this resource by looping through all the containers in the container’s array. On patched, the modified pod definition is returned and passed to the api server to apply to the cluster.&lt;/p&gt;

&lt;h3 id=&quot;-references-&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; References &lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;https://slack.engineering/simple-kubernetes-webhook/&lt;/li&gt;
  &lt;li&gt;https://github.com/kubernetes/client-go&lt;/li&gt;
  &lt;li&gt;https://github.com/kubernetes/apimachinery&lt;/li&gt;
  &lt;li&gt;https://github.com/kubernetes/api&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Bikram Dhoju</name><email>bikram.dhoju@gmail.com</email><uri>https://bdhoju.com</uri></author><category term="Kubernetes" /><category term="Golang" /><summary type="html">SN Stack Technology 1 Language Golang 2 Orchestrator Kubernetes(KinD)</summary></entry><entry><title type="html">Building Kubernetes Admission Webhooks (Part 1 of 2)</title><link href="http://0.0.0.0:4000/devops/Building-Kubernetes-Admission-Webhooks-pt-1/" rel="alternate" type="text/html" title="Building Kubernetes Admission Webhooks (Part 1 of 2)" /><published>2022-05-06T00:00:00+00:00</published><updated>2022-05-06T20:00:58+00:00</updated><id>http://0.0.0.0:4000/devops/Building-Kubernetes-Admission-Webhooks-pt-1</id><content type="html" xml:base="http://0.0.0.0:4000/devops/Building-Kubernetes-Admission-Webhooks-pt-1/">&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;SN&lt;/th&gt;
      &lt;th&gt;Stack&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Technology&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Language&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Golang&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Orchestrator&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Kubernetes(KinD)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;As you spend you more and more on the devops tools it wont take you long to realize that &lt;a href=&quot;https://go.dev/&quot;&gt;Golang&lt;/a&gt; is pretty powerful programming language given sheer volume of the tools build with it. Among those, the most prominent ones are the &lt;a href=&quot;https://kubernetes.io&quot;&gt;Kubernetes&lt;/a&gt;, &lt;a href=&quot;https://www.terraform.io/&quot;&gt;Terraform&lt;/a&gt;, &lt;a href=&quot;https://argo-cd.readthedocs.io/en/stable/&quot;&gt;ArgoCD&lt;/a&gt;, &lt;a href=&quot;https://fluxcd.io/&quot;&gt;fluxCD&lt;/a&gt;. As a SRE/DevOps Engineer I spend a-lot of time working on the internals of these tools profusely. It’s just a matter of time that you get inspired to create a similar tools for automation purpose give the such amazing Open Source Community.&lt;/p&gt;

&lt;p&gt;Kubernetes have taken the cloud eco-system by the storm. Kubernetes makes the complex system more visible and deployments much easier. Apart from this the extendibility of the Kubernetes API have made the cloud automation very robust.&lt;/p&gt;

&lt;p&gt;I have been trying to understand Kubernetes API structure for a while, initially I tried to dive directly into the code from the officially provided &lt;a href=&quot;https://github.com/kubernetes/client-go&quot;&gt;go-client&lt;/a&gt;, boy that was a painful to get grasp since its massive and novelty of structures. With massive number of nuts and bots it overwhelms you pretty fast. So before diving to code, I would suggest to understand the core data structure and concept first which has its own learning curve.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Please the complete code for this series of tutorials at &lt;a href=&quot;https://github.com/Becram/kubernetes-webhook&quot;&gt;https://github.com/Becram/kubernetes-webhook&lt;/a&gt;. I am a newbie to golang, and haven’t written any tests&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Before understanding what are Kubernetes Admission webhooks, let’s first get to know basics. Here is quick summary of API resources, Kinds, and Objects. &lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Resource Type&lt;/code&gt;:  loosely, an entity served by a Kubernetes API endpoint: pods, deployments, configmaps, etc.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;API Group&lt;/code&gt;:  resource types are organized into versioned logical groups: apps/v1, batch/v1, storage.k8s.io/v1beta1, etc.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Object&lt;/code&gt;: a resource instance - every API endpoint deals with objects of a certain resource type.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Kind&lt;/code&gt;:  every object returned or accepted by the API must conform to an object schema - a certain composition of attributes defined by its kind: Pod, Deployment, ConfigMap, etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/1600/1*vPZJQHAlfv6YcJv1OI6eYQ.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s also important to differentiate between objects in a broad sense and Kubernetes &lt;code class=&quot;highlighter-rouge&quot;&gt;first-class&lt;/code&gt; Objects - persistent entities like &lt;code class=&quot;highlighter-rouge&quot;&gt;Pod&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Service&lt;/code&gt;, or &lt;code class=&quot;highlighter-rouge&quot;&gt;Secret&lt;/code&gt; serving as a record of intent for the cluster. While every API object must have an API version and kind attributes for the sake of its serialization and deserialization, not every API object is a &lt;code class=&quot;highlighter-rouge&quot;&gt;first-class&lt;/code&gt; Kubernetes Object.&lt;/p&gt;

&lt;p&gt;I would recommend to go through https://kubernetes.io/docs/reference/using-api/api-concepts/ for basic of Kubernetes apis.&lt;/p&gt;

&lt;p&gt;#Understanding Go Modules&lt;/p&gt;

&lt;h2 id=&quot;-module-k8sioapi-&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; Module k8s.io/api &lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Go is a statically typed programming language. So, where do all the structs corresponding to &lt;code class=&quot;highlighter-rouge&quot;&gt;Pods&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ConfigMaps&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Secrets&lt;/code&gt;, and other first-class Kubernetes Objects live? Right, in &lt;a href=&quot;https://github.com/kubernetes/api&quot;&gt;k8s.io/api&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;appsv1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;k8s.io/api/apps/v1&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corev1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;k8s.io/api/core/v1&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deployment&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;appsv1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Deployment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;appsv1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DeploymentSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corev1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PodTemplateSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corev1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PodSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Containers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;corev1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;web&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nginx:1.21&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%#v&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deployment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The module defines not only the top-level Kubernetes Objects like the &lt;code class=&quot;highlighter-rouge&quot;&gt;Deployment&lt;/code&gt; above but also numerous auxiliary types for their inner attributes:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;// PodSpec is a description of a pod.&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PodSpec&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Volumes&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Volume&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;`json:&quot;volumes,omitempty&quot; patchStrategy:&quot;merge,retainKeys&quot; patchMergeKey:&quot;name&quot; protobuf:&quot;bytes,1,rep,name=volumes&quot;`&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InitContainers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Container&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;`json:&quot;initContainers,omitempty&quot; patchStrategy:&quot;merge&quot; patchMergeKey:&quot;name&quot; protobuf:&quot;bytes,20,rep,name=initContainers&quot;`&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Containers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Container&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;`json:&quot;containers&quot; patchStrategy:&quot;merge&quot; patchMergeKey:&quot;name&quot; protobuf:&quot;bytes,2,rep,name=containers&quot;`&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EphemeralContainers&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EphemeralContainer&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;`json:&quot;ephemeralContainers,omitempty&quot; patchStrategy:&quot;merge&quot; patchMergeKey:&quot;name&quot; protobuf:&quot;bytes,34,rep,name=ephemeralContainers&quot;`&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RestartPolicy&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RestartPolicy&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;`json:&quot;restartPolicy,omitempty&quot; protobuf:&quot;bytes,3,opt,name=restartPolicy,casttype=RestartPolicy&quot;`&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    
  &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;-module-k8sioapimachinery-&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; Module k8s.io/apimachinery &lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Unlike the narrowly-scoped &lt;code class=&quot;highlighter-rouge&quot;&gt;k8s.io/api&lt;/code&gt; module, the &lt;a href=&quot;https://github.com/kubernetes/apimachinery&quot;&gt;k8s.io/apimachinery&lt;/a&gt; module is rather manifold. The &lt;a href=&quot;https://github.com/kubernetes/apimachinery/tree/3d7c63b4de4fdee1917284129969901d4777facc#purpose&quot;&gt;README&lt;/a&gt; describes its purpose as:&lt;/p&gt;

&lt;p&gt;This library is a shared dependency for servers and clients to work with Kubernetes API infrastructure without direct type dependencies. Its first consumers are &lt;code class=&quot;highlighter-rouge&quot;&gt;k8s.io/kubernetes&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;k8s.io/client-go&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;k8s.io/apiserver&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It’d be hard to cover all the responsibilities of the apimachinery module in a single post without being too shallow. So i would recommend to read the official docs.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lets dive into the real project for admission webhooks in part 2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;-references-&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; References &lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/&lt;/li&gt;
  &lt;li&gt;https://github.com/kubernetes/client-go&lt;/li&gt;
  &lt;li&gt;https://github.com/kubernetes/apimachinery&lt;/li&gt;
  &lt;li&gt;https://github.com/kubernetes/api&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Bikram Dhoju</name><email>bikram.dhoju@gmail.com</email><uri>https://bdhoju.com</uri></author><category term="Kubernetes" /><category term="Golang" /><summary type="html">SN Stack Technology 1 Language Golang 2 Orchestrator Kubernetes(KinD)</summary></entry><entry><title type="html">Kustomized Helm Structure</title><link href="http://0.0.0.0:4000/devops/Kustomized-Helm/" rel="alternate" type="text/html" title="Kustomized Helm Structure" /><published>2021-12-17T00:00:00+00:00</published><updated>2021-12-17T20:00:58+00:00</updated><id>http://0.0.0.0:4000/devops/Kustomized-Helm</id><content type="html" xml:base="http://0.0.0.0:4000/devops/Kustomized-Helm/">&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;SN&lt;/th&gt;
      &lt;th&gt;Stack&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Technology&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Language&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;yaml&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Templating&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Helm/Kustomize&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;As a devops/SRE maintaining and managing the yaml seems a cumbersome task. There is great a challenging in maintaining highly readable yaml while keeping it simple. &lt;a href=&quot;https://helm.sh/&quot;&gt;Helm&lt;/a&gt; and &lt;a href=&quot;https://kustomize.io/&quot;&gt;Kustomize&lt;/a&gt; are the two amazing tool to maintain these yaml. Both of these comes with amazing features choosing one over another is very difficult task in itself as the tradeoff is pretty high. So how about have both.&lt;/p&gt;

&lt;p&gt;Another important challenge to maintain in multiple environment system to to maintain hierarchal yaml structure, such that the repeatitive values are maintained as base and values for each environment overlayed on top of it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://miro.medium.com/max/1160/1*i6fxGW9H-8V3iu-Xfh1ozQ.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As in above the single app (cert-manager in our case with jetstack helm chart) is broken in to two folders as &lt;code class=&quot;highlighter-rouge&quot;&gt;helm_base&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;overlays&lt;/code&gt;, helm_base folder comprises of the helm chart definition in Chart.yaml file as&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Helm&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chart&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;manager&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;manager&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.3.1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;—&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;manager&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;.3.1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//charts.jetstack.io&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that the repository is defined as the dependencies this approach is helpful for defining multiple charts and segregating the values for it. In addition to the Chart definition it also comprises &lt;code class=&quot;highlighter-rouge&quot;&gt;kustomization.yml&lt;/code&gt; this defines the resource definitions to be applied.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;helm_base/cert-manager/kustomization.yml&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kustomize.config.k8s.io/v1beta1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Kustomization&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;commonLabels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cert-manager&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;all.yml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You may notice the resources section which mentions the &lt;code class=&quot;highlighter-rouge&quot;&gt;all.yml&lt;/code&gt; which does not exist we will get back to it later. commonLabels section adds this label to all the resources defined in &lt;code class=&quot;highlighter-rouge&quot;&gt;all.yml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next folder is the overlay folder which contains the kustomize definition for each environment. The example above contains only for dev environment. For our &lt;code class=&quot;highlighter-rouge&quot;&gt;cert-manger chart&lt;/code&gt; we have a folder for each environment. This folder contains kustomization definitions, helm overrride values and additional resources. Lets get to the &lt;code class=&quot;highlighter-rouge&quot;&gt;kustomization.yml&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;overlays/dev/cert-manager/kustomization.yml&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;kustomize.config.k8s.io/v1beta1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Kustomization&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;bases&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;../../../helm_base/cert-manager&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cert-manager&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;namespace.yml&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cluster-issuer.yaml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When a this configuration is applied it goes back to the helm_base directory to particular app folder and applies the kustomization on that folder in addition to that there are other resources which needs to be applied in resources sections. Like I mentioned below the kustomization folder in base contains a kustomize config which contains the resource to apply named all.yml which doesnot exist currently. This &lt;code class=&quot;highlighter-rouge&quot;&gt;all.yml&lt;/code&gt; file contains the resource definition which needs to be generated from the helm chart before we apply the overlay.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;overlays/dev/cert-manager
helm dependency build ../../../helm_base/cert-manager
helm template ../../../helm_base/cert-manager &lt;span class=&quot;nt&quot;&gt;--namespace&lt;/span&gt; cert-manager &lt;span class=&quot;nt&quot;&gt;--name-template&lt;/span&gt; cert-manager &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt;  values-override.yaml   &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ../../../helm_base/cert-manager/all.yml 
kubectl apply &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The last command applies all the resources in the all.yml and the additional resources defined in the resources section. Hence, we use the beautiful helm template as well as the powerful kustomize feature. Apart from this any resources generated from helm chart can be patch using kustomize which gives great power for changing the resources definition.&lt;/p&gt;</content><author><name>Bikram Dhoju</name><email>bikram.dhoju@gmail.com</email><uri>https://bdhoju.com</uri></author><category term="Kubernetes" /><summary type="html">SN Stack Technology 1 Language yaml 2 Templating Helm/Kustomize</summary></entry><entry><title type="html">Kubernetes Cluster Management with kops</title><link href="http://0.0.0.0:4000/devops/Kubernetes-Cluster-Mgmt-with-Kops/" rel="alternate" type="text/html" title="Kubernetes Cluster Management with kops" /><published>2019-07-10T00:00:00+00:00</published><updated>2019-04-15T20:00:58+00:00</updated><id>http://0.0.0.0:4000/devops/Kubernetes-Cluster-Mgmt-with-Kops</id><content type="html" xml:base="http://0.0.0.0:4000/devops/Kubernetes-Cluster-Mgmt-with-Kops/">&lt;h1 id=&quot;kubernetes-cluster-management-with-kops&quot;&gt;Kubernetes Cluster Management with kops&lt;/h1&gt;
&lt;p&gt;You may find the complete script &lt;a href=&quot;https://gist.github.com/Becram/d68009a56fff139bbfad982ffb5c204f&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After Google donated its amazing container orcheastration tool, kubernetes to Cloud Native Computing foundation (CNCF), many devops breath the air of sigh. Kubernetes with it amazing power took over the devops world which made the devops more powerful, resilient and highly scalable with great implimentation of fault tolerance.&lt;/p&gt;

&lt;p&gt;All these power come at a price. For a newbies kubernetes cluster creation seems a additional headache with very steep learning curves. Manual cluster creation seems a great challenge and tedious task. So, this is where the open source &lt;a href=&quot;https://github.com/kubernetes/kops&quot;&gt;kops&lt;/a&gt; comes to g rescue. With plethora of task abstraction, kops is a great tool to create kubernetes cluster. Kops prvides the production ready cluster with high scalability on the popular cloud architecture as AWS and Google cloud. Moreover it has a close ressemblence with &lt;em&gt;kubectl&lt;/em&gt; syntax which makes learning very flat.&lt;/p&gt;

&lt;h2 id=&quot;key-features-kops&quot;&gt;Key features kops&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Automates the provisioning of Kubernetes clusters in AWS and GCE&lt;/li&gt;
  &lt;li&gt;Deploys Highly Available (HA) Kubernetes Masters&lt;/li&gt;
  &lt;li&gt;Built on a state-sync model for &lt;strong&gt;dry-runs&lt;/strong&gt; and automatic &lt;strong&gt;idempotency&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Ability to generate Terraform&lt;/li&gt;
  &lt;li&gt;Supports custom Kubernetes add-ons&lt;/li&gt;
  &lt;li&gt;Command line autocompletion&lt;/li&gt;
  &lt;li&gt;YAML Manifest Based API Configuration&lt;/li&gt;
  &lt;li&gt;Templating and dry-run modes for creating
 Manifests&lt;/li&gt;
  &lt;li&gt;Choose from eight different CNI Networking providers out-of-the-box&lt;/li&gt;
  &lt;li&gt;Supports upgrading from kube-up&lt;/li&gt;
  &lt;li&gt;Capability to add containers, as hooks, and files to nodes via a cluster manifest&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;without-further-ado-lets-dive-into-kops-for-this-tutorial-we-will-be-using-aws-cloud&quot;&gt;Without further ado lets dive into kops (For this tutorial we will be using AWS cloud)&lt;/h3&gt;

&lt;p&gt;First thing first make sure you have aws account. So, lets install aws cli as shown below:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    sudo apt-get update
    # install python-pip
    sudo apt install python-pip
    #install AWS client
    pip install awscli --upgrade --user
    #install jq
    sudo apt-get install jq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;After that make sure you have configured &lt;em&gt;aws cli&lt;/em&gt; with appropriate configuration using command &lt;em&gt;aws configure&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Next we are goiing to install kops. kops installation is very easy&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    # Installing kops version 1.12.2
    wget https://github.com/kubernetes/kops/releases/download/1.12.2/kops-linux-amd64
    chmod +x kops-linux-amd64
    sudo mv kops-linux-amd64 /usr/local/bin/kops
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We need subdomain name for the cluster which will be the identity of the cluster. Since we dont have  registered subdomain we can have as domain name as &lt;em&gt;becram.k8s.local&lt;/em&gt; for our case. All the configuration needs to be stored in the cloud itself for which we use AWS S3 bucket. lets create a S3 buket as:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    SUBDOMAIN_NAME=becram.k8s.local
    AWS_DEFAULT_REGION=us-east-2 # I use us-east-2 region
    aws s3 rb s3://$SUBDOMAIN_NAME-kubernetes-state
    aws s3 mb s3://$SUBDOMAIN_NAME-kubernetes-state --region $AWS_DEFAULT_REGION
    export KOPS_STATE_STORE=s3://$SUBDOMAIN_NAME-kubernetes-state
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Next we need to have a ssh keys to access the server nodes. We create  keys as:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    KOPS_HOME=/home/bikram/kops
    SSH_KEY_HOME=$KOPS_HOME/$SUBDOMAIN_NAME/sshkeys
    # create ssh key home
    mkdir $SSH_KEY_HOME
    # generate ssh key
    ssh-keygen -f $SSH_KEY_HOME/id_rsa -t rsa #save the key in the sshkeys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally lets the party begin. lets run the cluster as&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    SSH_PUBLIC_KEY=$SSH_KEY_HOME/id_rsa.pub
    kops create cluster --v=0 \
        --cloud=aws \
        --node-count 2 \
        --master-size=t2.medium \
        --master-zones=us-east-2a \
        --zones us-east-2a,us-east-2b \
        --name=$SUBDOMAIN_NAME \
        --node-size=t2.micro \
        --ssh-public-key=$SSH_PUBLIC_KEY \
        2&amp;gt;&amp;amp;1 | tee $KOPS_HOME/create_cluster.txt

    kops update cluster $SUBDOMAIN_NAME --yes
    ############# UPDATE CLUSTER ENDS ################&quot;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Your cluster is ready.&lt;/p&gt;</content><author><name>Bikram Dhoju</name><email>bikram.dhoju@gmail.com</email><uri>https://bdhoju.com</uri></author><category term="Kubernetes" /><category term="Orcheastration" /><summary type="html">Kubernetes Cluster Management with kops You may find the complete script here</summary></entry><entry><title type="html">Python(Flask) Project (Service to upload image to imgur.com)</title><link href="http://0.0.0.0:4000/network&system/Imgur-imagfe-uploader-flask-Python/" rel="alternate" type="text/html" title="Python(Flask) Project (Service to upload image to imgur.com)" /><published>2019-04-15T00:00:00+00:00</published><updated>2019-04-15T20:00:58+00:00</updated><id>http://0.0.0.0:4000/network&amp;system/Imgur-imagfe-uploader-flask-Python</id><content type="html" xml:base="http://0.0.0.0:4000/network&amp;system/Imgur-imagfe-uploader-flask-Python/">&lt;h1 id=&quot;imgur-rest-image-uploader&quot;&gt;Imgur REST Image Uploader&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;SN&lt;/th&gt;
      &lt;th&gt;Stack&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Technology&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Language&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Python&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Framework&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Flask&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Container&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Docker&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;Orchestrator&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Docker Compose&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;pre-requites&quot;&gt;Pre-requites&lt;/h2&gt;
&lt;h3 id=&quot;installing-docker-and-docker-compose&quot;&gt;Installing Docker and docker-compose&lt;/h3&gt;
&lt;p&gt;Install docker using the commands&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://get.docker.com | sh &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;usermod &lt;span class=&quot;nt&quot;&gt;-aG&lt;/span&gt; docker &lt;span class=&quot;nv&quot;&gt;$USER&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Install docker-compose as&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; docker-compose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is a service to upload images to &lt;a href=&quot;https://www.imgur.com&quot;&gt;imgur.com&lt;/a&gt; via its api endpoints. It tasks json object to upload the image ashychronosly. It implements &lt;a href=&quot;http://www.celeryproject.org/&quot;&gt;celery&lt;/a&gt; queue with &lt;a href=&quot;https://redis.io/&quot;&gt;Redis&lt;/a&gt; to perform the ashynchronity of the tasks.&lt;/p&gt;

&lt;p&gt;First of all, register an app in &lt;a href=&quot;https://api.imgur.com/oauth2/addclient&quot;&gt;imgur&lt;/a&gt; and get a &lt;strong&gt;Client-ID&lt;/strong&gt; and add the id to &lt;a href=&quot;celery-queue/tasks.py&quot;&gt;celery-queue/tasks.py&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Client_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'XXXXXXXX'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;celery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Celery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'tasks'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;broker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CELERY_BROKER_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;backend&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CELERY_RESULT_BACKEND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;                
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/Becram/imgur-image-uploader-service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;build--launch&quot;&gt;Build &amp;amp; Launch&lt;/h3&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;imgur-image-uploader-service
docker-compose  up &lt;span class=&quot;nt&quot;&gt;--build&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will expose the Flask application’s endpoints on port &lt;code class=&quot;highlighter-rouge&quot;&gt;8080&lt;/code&gt; as well as a &lt;a href=&quot;https://github.com/mher/flower&quot;&gt;Flower&lt;/a&gt; server for monitoring workers on port &lt;code class=&quot;highlighter-rouge&quot;&gt;5555&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To add more workers:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker-compose up &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--scale&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5 &lt;span class=&quot;nt&quot;&gt;--no-recreate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;rest-api-image-upload-endpoints&quot;&gt;Rest API Image upload endpoints&lt;/h2&gt;

&lt;h3 id=&quot;submit-image-urls-for-upload&quot;&gt;Submit image URLs for upload&lt;/h3&gt;
&lt;p&gt;Submits a request to upload a set of image URLs to Imgur. The images will be uploaded to the configured Imgur, viewable by anyone with the link.
Request&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /v1/images/upload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The request is just a JSON body, no query parameters.
Request body
Attributes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;urls: An array of URLs to images that will be uploaded. Duplicates should be stripped out.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example request body:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;urls&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://farm3.staticflickr.com/2879/11234651086_681b3c2c00_b_d.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://farm4.staticflickr.com/3790/11244125445_3c2f32cd83_k_d.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     
     &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.rollingstone.com/wp-content/uploads/2019/04/notre-dame-rebuild.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://media2.s-nbcnews.com/j/newscms/2019_16/2823376/190416-notre-dame-fire-mn-0740_4917dcab40d35a0c8da7db09fc8a0aa8.f-760w.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.welcomenepal.com/uploads/slider/visit-nepal-year-2020-ntb-dmo-site-banner.jpeg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.welcomenepal.com/uploads/activity/pashupatinath-pilgrimage-tour-in-kathmandu-nepal.jpeg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.welcomenepal.com/uploads/slider/kathmandu-valley-nepal.jpeg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.welcomenepal.com/uploads/art_oy_kathmandu.jpg&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Response
On success, returns immediately with an appropriate status code with the id of the job.&lt;/p&gt;

&lt;p&gt;Response body
Attributes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;jobId: The id of the upload job that was just submitted.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example response body:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jobId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;55355b7c-9b86-4a1a-b32e-6cdd6db07183&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;gets-the-status-of-an-upload-images-job&quot;&gt;Gets the status of an upload images job.&lt;/h2&gt;
&lt;p&gt;Request&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /v1/images/upload/:jobId
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The request has no body and no query parameters. :jobId is an ID returned from the POST upload images API.&lt;/p&gt;

&lt;p&gt;Request body: None&lt;/p&gt;

&lt;p&gt;Response
On success, returns immediately with an appropriate status code with the id of the job.&lt;/p&gt;

&lt;p&gt;Response body
Attributes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;id: The id of the upload job.&lt;/li&gt;
  &lt;li&gt;created: When job was created. In ISO8601 format (YYYY-MM-DDTHH:mm:ss.sssZ) for GMT.&lt;/li&gt;
  &lt;li&gt;finished: When job was completed. In same format as created. Is null, if status is not complete.&lt;/li&gt;
  &lt;li&gt;status: The status of the entire upload job. Is one of:&lt;/li&gt;
  &lt;li&gt;pending: indicates job has not started processing.&lt;/li&gt;
  &lt;li&gt;in-progress: job has started processing.&lt;/li&gt;
  &lt;li&gt;complete: job is complete.&lt;/li&gt;
  &lt;li&gt;uploaded: An object of arrays containing the set of URLs submitted, in several arrays indicating the status of that image URL upload (pending, complete, failed).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example response body:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;created&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2019-04-22T03:00:49.447098&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;finished&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;470f0516-b31f-4d14-8f87-77a5282bfe2f&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;in-progres&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uploaded&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;completed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://i.imgur.com/YV08tTg.jpg&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;failed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;pending&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.rollingstone.com/wp-content/uploads/2019/04/notre-dame-rebuild.jpg&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;get-list-of-all-uploaded-image-links&quot;&gt;Get list of all uploaded image links&lt;/h2&gt;
&lt;p&gt;Gets the links of all images uploaded to Imgur. These links will be accessible by anyone.
Request&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /v1/images
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The request has no body and no query parameters.
Request bodyNone
Response
On success, return an array of the Imgur links to the successfully uploaded images. 
Response body
Attributes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;uploaded: An array of the Imgur links to the uploaded images.
Example response body:
    &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uploaded&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://i.imgur.com/0i6HX3D.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://i.imgur.com/q3urwVe.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://i.imgur.com/uYdqs4i.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://i.imgur.com/pa8eBQv.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://i.imgur.com/mepUIVg.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://i.imgur.com/1hNaxiY.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://i.imgur.com/6AM3sJb.jpg&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;to-shut-down&quot;&gt;To shut down:&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker-compose down
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To change the endpoints, update the code in &lt;a href=&quot;api/app.py&quot;&gt;api/app.py&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;to-do&quot;&gt;TO-DO:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;There is some issue in updation of the completed list which can be fixed using external datastore.&lt;/li&gt;
  &lt;li&gt;Add production mode&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Bikram Dhoju</name><email>bikram.dhoju@gmail.com</email><uri>https://bdhoju.com</uri></author><category term="Python" /><category term="Flask" /><category term="Docker" /><category term="REST-API" /><summary type="html">Imgur REST Image Uploader</summary></entry><entry><title type="html">DNS Sinkholing with BIND9 (DNS Series:Part III)</title><link href="http://0.0.0.0:4000/network&system/DNS-Series-3/" rel="alternate" type="text/html" title="DNS Sinkholing with BIND9  (DNS Series:Part III)" /><published>2018-06-18T00:00:00+00:00</published><updated>2018-03-20T20:00:58+00:00</updated><id>http://0.0.0.0:4000/network&amp;system/DNS-Series-3</id><content type="html" xml:base="http://0.0.0.0:4000/network&amp;system/DNS-Series-3/">&lt;p&gt;Like talked earlier DNS is just like a phone book in your cell phone that maps the names to the phone number. The benefit of this is that you don’t have to memorize the lengthy numbers. When you have to call someone we just have to search in the number and call it won’t matter if you remember the number or not. But imagine someone changes the underlying phone number without your knowledge, you will definitely call someone else. If the destination receiver can mimic the voice then you are totally screwed before you know it.&lt;/p&gt;

&lt;p&gt;Image the exact scenario in your DNS server, to add to the problem your DNS is more publicly accessible than your phone. So it is primally important to protect your DNS server. We gonna use our DNS server to route the traffic of the malicious sites to a sinkhole. Since almost all browsers work with the domain names instead of IP address DNS sinkhole is the best option in hand to prevent the organization from malignment sites.&lt;/p&gt;

&lt;p&gt;DNS Sinkholing played an important role in de-weaponizing the &lt;a href=&quot;https://en.wikipedia.org/wiki/WannaCry_ransomware_attack&quot;&gt;WannaCry Ransomware&lt;/a&gt;. Basically, WannaCry infections entered organization network through emails and propagated in the network via &lt;a href=&quot;https://en.wikipedia.org/wiki/Server_Message_Block&quot;&gt;SMB&lt;/a&gt; ports which were the SMB vulnerability for which Windows had released a patch 2 months earlier. So infection had a kill switch built into it which would check whether a certain gibberish URL led to a live web page. Someone found with and registered the website and entire thing was stopped. It was such a naive kill switch for such disastrous internet phenomena. Off course this was intentional kill switch to tame the monster they have created but was really not thought through. As it turns out, that $10.69 investment was enough to shut the whole thing down—for now, at least.&lt;/p&gt;

&lt;h2 id=&quot;lets-create-a-dns-server-for-sinkholing-unwanted-sites&quot;&gt;Lets &lt;a href=&quot;http://bikramdhoju.com.np/network&amp;amp;system/DNS-Series-2/&quot;&gt;create a DNS server&lt;/a&gt; for sinkholing unwanted sites.&lt;/h2&gt;

&lt;h2 id=&quot;architecture&quot;&gt;Architecture&lt;/h2&gt;

&lt;h3 id=&quot;1-normal-dns-architecture&quot;&gt;1. Normal DNS architecture&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/DNS3/NormalDNS.png&quot; alt=&quot;DNS server &quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-sinkholed-dns-server-architecture&quot;&gt;2. Sinkholed DNS Server architecture&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/DNS3/DNSSinkhole.png&quot; alt=&quot;DNS server&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So actuall we are configuring the bind to route a particular domains to sink hole server.&lt;/p&gt;

&lt;h2 id=&quot;configure-bind-for-sinkholing&quot;&gt;Configure bind for sinkholing&lt;/h2&gt;

&lt;p&gt;After we have configured bind like &lt;a href=&quot;http://bikramdhoju.com.np/network&amp;amp;system/DNS-Series-2/&quot;&gt;here&lt;/a&gt; lets configure a new zone files.
Create a zone file in /etc/bind/zones folder, lets name it sinkhole.zone.file and populate it as&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ;file /etc/bind/zones/sinkhole.zone.file
  ; BIND db file for ad servers - point all addresses to an invalid IP
  $TTL  864000  ; ten days

  @       IN      SOA     localhost.      root.localhost. (
                        2008032800       ; serial number YYMMDDNN
                        288000   ; refresh  80 hours
                        72000    ; retry    20 hours
                        8640000  ; expire  100 days
                        864000 ) ; min ttl  10 day
                NS      localhost.

    A 10.10.10.11

  *   IN      A       10.10.10.11

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What this zone file is doing is rediecting all domain pointed to this zone file to our sinkhole server which 10.10.10.11(in  my case). You might notice we have set TTL value to 10 days so that they are be cached for longer time.&lt;/p&gt;

&lt;p&gt;Now lets do the main part, lets gather the malicious sites and make them point to our sinhole zone file.&lt;/p&gt;

&lt;p&gt;First create  a confuration for blocking sites. for this create a file named.conf.blocked in ‘‘/etc/bind/’’  and populate it with sites which needs to be blocked. Add this configuration to named.conf as :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    // This is the primary configuration file for the BIND DNS server named.
     //
   // Please read /usr/share/doc/bind9/README.Debian.gz for information on the 
   // structure of BIND configuration files in Debian, *BEFORE* you customize 
   // this configuration file.
   //
   // If you are just adding zones, please do that in /etc/bind/named.conf.local

   include &quot;/etc/bind/named.conf.blocked&quot;;
   include &quot;/etc/bind/named.conf.options&quot;;
   include &quot;/etc/bind/named.conf.local&quot;;
   include &quot;/etc/bind/named.conf.default-zones&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We need to populate the block conf to point to our sinkhole zone file. I am using &lt;a href=&quot;https://github.com/oznu/dns-zone-blacklist&quot;&gt;this project&lt;/a&gt; to get all malicious sites, I am sure you can find pretty more like these. This file looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   zone &quot;2-dot-mod-ads-dot-house-ads-server.appspot.com&quot; { type master; notify no; file &quot;/etc/bind/zones/sinkhole.zone.file&quot;; };
   zone &quot;lb0-telemetry-prod-us-east-1.servers.getgo.com&quot; { type master; notify no; file &quot;/etc/bind/zones/sinkhole.zone.file&quot;; };
   zone &quot;xn--80aebbcbcdemfkhba4byaehoejh8dza3v.xn--p1ai&quot; { type master; notify no; file &quot;/etc/bind/zones/sinkhole.zone.file&quot;; };
   zone &quot;howupdateworks.amazingupdates4youtoday.website&quot; { type master; notify no; file &quot;/etc/bind/zones/sinkhole.zone.file&quot;; };
   zone &quot;getsoftnow.smallandprecise2upgradingnew.review&quot; { type master; notify no; file &quot;/etc/bind/zones/sinkhole.zone.file&quot;; };
   zone &quot;pornographo.blogspot.com.tr.br.blogspot.com.tr&quot; { type master; notify no; file &quot;/etc/bind/zones/sinkhole.zone.file&quot;; };
   zone &quot;buying.mobile.online.phone.samsung.uk.sms13.de&quot; { type master; notify no; file &quot;/etc/bind/zones/sinkhole.zone.file&quot;; };
   zone &quot;upgrade.themainplacesetnowforcontentingnew.bid&quot; { type master; notify no; file &quot;/etc/bind/zones/sinkhole.zone.file&quot;; };
     .......
     .......
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For testing purpose I have setup a webserver in sinkhole server. We can use Intrusion Detection System as fail2ban to tracking and alerting purpose.&lt;/p&gt;

&lt;p&gt;I have setup a client machine pointing to our DNS server which is 10.10.10.10. We can do this in ubuntu linux by editing /etc/resolv.conf file manually.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  # file: /etc/resov.conf

   nameserver 10.10.10.10 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now lets query a malicious domain in our blocked configuration.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Client$ dig usaa.com-inet-truememberent-iscaddetour-verify.kurusfit.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;response&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;

   ; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.11.4-4-Debian &amp;lt;&amp;lt;&amp;gt;&amp;gt; usaa.com-inet-truememberent-iscaddetour-verify.kurusfit.com
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 54212
;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL: 3

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
;; QUESTION SECTION:
;usaa.com-inet-truememberent-iscaddetour-verify.kurusfit.com. IN  A

;; ANSWER SECTION:
usaa.com-inet-truememberent-iscaddetour-verify.kurusfit.com. 864000 IN A 10.10.10.11

;; AUTHORITY SECTION:
usaa.com-inet-truememberent-iscaddetour-verify.kurusfit.com. 864000 IN NS localhost.

;; ADDITIONAL SECTION:
localhost.    604800  IN  A 127.0.0.1
localhost.    604800  IN  AAAA  ::1

;; Query time: 0 msec
;; SERVER: 10.10.10.10#53(10.10.10.10)
;; WHEN: Sun Sep 09 16:09:30 +0545 2018
;; MSG SIZE  rcvd: 171

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You see it routes to our webserver&lt;/p&gt;

&lt;p&gt;Now lets curl it&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -v usaa.com-inet-truememberent-iscaddetour-verify.kurusfit.com

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;output&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    * Rebuilt URL to: usaa.com-inet-truememberent-iscaddetour-verify.kurusfit.com/
    *   Trying 10.10.10.11...
    * TCP_NODELAY set
    * Connected to usaa.com-inet-truememberent-iscaddetour-verify.kurusfit.com (10.10.10.11) port 80 (#0)
    &amp;gt; GET / HTTP/1.1
    &amp;gt; Host: usaa.com-inet-truememberent-iscaddetour-verify.kurusfit.com
    &amp;gt; User-Agent: curl/7.61.0
    &amp;gt; Accept: */*
    &amp;gt; 
    &amp;lt; HTTP/1.1 200 OK
    &amp;lt; Date: Sun, 09 Sep 2018 10:27:07 GMT
    &amp;lt; Server: Apache/2.4.18 (Ubuntu)
    &amp;lt; Last-Modified: Sat, 08 Sep 2018 16:49:46 GMT
    &amp;lt; ETag: &quot;1b-5755ee95ea784&quot;
    &amp;lt; Accept-Ranges: bytes
    &amp;lt; Content-Length: 27
    &amp;lt; Content-Type: text/html
    &amp;lt; 
    &amp;lt;p&amp;gt; You are sinkholed &amp;lt;/p&amp;gt;
    * Connection #0 to host usaa.com-inet-truememberent-iscaddetour-verify.kurusfit.com left intact
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That it how its got sinkholed to our webserver 10.10.10.11&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.csoonline.com/article/3227906/ransomware/what-is-wannacry-ransomware-how-does-it-infect-and-who-was-responsible.html&quot;&gt;https://www.csoonline.com/article/3227906/ransomware/what-is-wannacry-ransomware-how-does-it-infect-and-who-was-responsible.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/WannaCry_ransomware_attack&quot;&gt;https://en.wikipedia.org/wiki/WannaCry_ransomware_attack&lt;/a&gt;&lt;/p&gt;</content><author><name>Bikram Dhoju</name><email>bikram.dhoju@gmail.com</email><uri>https://bdhoju.com</uri></author><category term="Internet" /><category term="DNS" /><category term="Javascript" /><summary type="html">Like talked earlier DNS is just like a phone book in your cell phone that maps the names to the phone number. The benefit of this is that you don’t have to memorize the lengthy numbers. When you have to call someone we just have to search in the number and call it won’t matter if you remember the number or not. But imagine someone changes the underlying phone number without your knowledge, you will definitely call someone else. If the destination receiver can mimic the voice then you are totally screwed before you know it.</summary></entry><entry><title type="html">Setting up Private DNS Server with BIND9 (DNS Series:Part II)</title><link href="http://0.0.0.0:4000/network&system/DNS-Series-2/" rel="alternate" type="text/html" title="Setting up Private DNS Server with BIND9  (DNS Series:Part II)" /><published>2018-06-17T00:00:00+00:00</published><updated>2018-03-20T20:00:58+00:00</updated><id>http://0.0.0.0:4000/network&amp;system/DNS-Series-2</id><content type="html" xml:base="http://0.0.0.0:4000/network&amp;system/DNS-Series-2/">&lt;p&gt;We already dived into the nitty gritty of the theory about what exactly it is, how it works and what are its parts you can read the part one &lt;a href=&quot;http://becram.github.io/network&amp;amp;system/DNS-Series-1/&quot;&gt;here&lt;/a&gt;. In this series, I will be talking about how to set up a private DNS server using &lt;a href=&quot;https://www.isc.org/downloads/bind/&quot;&gt;BIND9&lt;/a&gt;. Before that, I want to focus on Private and Public DNS.&lt;/p&gt;

&lt;p&gt;Like we talked before DNS servers resolve the domain names into IP addresses but there might be the cases that you might have to resolve the domain names to local IPs. For example, let say there is a privately hosted file server in your office network, so you might have to provide domain name of the server instead of providing the IP address. In this case, you might have to create a private DNS server. For the security season it is inadvertently advised to separate private and public DNS server for security and privacy issue, since public exposure of the internal network IPs(or active directory information) to outsiders which might help an attacker compromise the office system.&lt;/p&gt;

&lt;p&gt;Apart from this, there is another method called &lt;a href=&quot;https://en.wikipedia.org/wiki/Split-horizon_DNS&quot;&gt; split-horizon DNS server&lt;/a&gt; DNS server which serves as both public and private DNS server as in it serves different responses depending on the source IP. For example, the DNS server serves example.com or example. local depending upon the public or private request.&lt;/p&gt;

&lt;p&gt;Without further ado lets dive into setting up a private DNS server:&lt;/p&gt;

&lt;h2 id=&quot;infrastructure&quot;&gt;Infrastructure&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SN&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Hostname&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;IP&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;FQDN&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Remarks&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ServerNode&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;10.10.10.10&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ns.test.example.com&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DNS Server&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;FileServerNode&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;10.10.10.11&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;fileserver.test.example.com&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;FileServer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ClientNode&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;10.10.10.9&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;client.test.example.com&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;to test DNS Server&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;installing-bind-on-dns-serversubuntu-node&quot;&gt;Installing BIND on DNS Servers(Ubuntu Node)&lt;/h2&gt;

&lt;h3 id=&quot;on--servernode--update-the-package&quot;&gt;On &lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; serverNode &lt;/span&gt;&lt;/strong&gt; update the package&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now install BIND:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo apt-get install bind9 bind9utils bind9-doc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ipv4-mode&quot;&gt;IPv4 Mode&lt;/h3&gt;

&lt;p&gt;We need to enable bind to run IPv4, so we provide argument -4 in the ExecStart directive in service file &lt;strong&gt;/etc/systemd/system/bind9.service&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;. . .
[Service]
ExecStart=/usr/sbin/named -f -u bind -4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Save and close the editor when you are finished.
Reload the systemd daemon to read the new configuration into the running system:
Restart BIND to implement the changes:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo systemctl daemon-reload
ServerNode$ sudo systemctl restart bind9

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally lets configure our bind:&lt;/p&gt;
&lt;h3 id=&quot;configure-file-namedconfoptions&quot;&gt;Configure file: named.conf.options&lt;/h3&gt;

&lt;p&gt;Lets edit the &lt;code class=&quot;highlighter-rouge&quot;&gt;named.conf.options&lt;/code&gt; file. This file contains the main configuration of the DNS server. We can provide the list of IPs or subnet which can access the the DNS through &lt;code class=&quot;highlighter-rouge&quot;&gt;Access Control list (ACL)&lt;/code&gt;. In our case we only want these three nodes to access our DNS. Edit &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/bind/named.conf.options&lt;/code&gt; as below:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;acl &quot;trusted&quot; {
        10.10.10.10;    # ServerNode - can be set to localhost
        10.10.10.11;    # FileserverNode
        10.10.10.12;    # Client Node
};

options {

...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now that we have our list of trusted DNS clients, we will want to edit the options block. Currently, the start of the block looks like the following:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;. . .
};

options {
      directory &quot;/var/cache/bind&quot;; #/var/cache/bind/ stores all the DNS query information
      recursion yes;                 # enables [recursive] queries
      allow-recursion { trusted; };  # allows recursive queries from &quot;trusted&quot; clients
      listen-on { 10.10.10.10; };   # DNS server private IP address - listen on private network only
      allow-transfer { none; };      # disable zone transfers by default

      forward first;
      forwarders {
            8.8.8.8;
            8.8.4.4;
        };
. . .
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;As you can see that I have set &lt;code class=&quot;highlighter-rouge&quot;&gt;recursion&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;yes&lt;/code&gt;, this means that when your query is recieved by the server it  will do all the job of fetching the answer, and giving it back to you. During this process, the DNS server might also query other DNS server’s in the internet on your behalf, for the answer.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.akadia.com/services/howto_forward_dns.html&quot;&gt;Forward and forwarders:&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The DNS forwarding facility of BIND Version 8 can be used to create a large site-wide cache on a few servers, reducing traffic over links to external nameservers. It can also be used to allow queries by servers that do not have direct access to the Internet, but wish to look up exterior names anyway. Forwarding occurs only on those queries for which the server is not authoritative and does not have the answer in its cache.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Forward&lt;/code&gt; : Causes the the server to query the forwarder first , and if that doesn’t answer the question the server will then look for the answer itself.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Forwarder&lt;/code&gt;: Specifies the IP addresses to be used for forwarding&lt;/p&gt;

&lt;h2 id=&quot;configure-local-file&quot;&gt;Configure Local File&lt;/h2&gt;

&lt;h3 id=&quot;what-are-zones-in-dns&quot;&gt;what are zones in DNS?&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DNS Zone&lt;/code&gt;: DNS zones are the adminstrative portion within DNS.In other words,they are  administrative space which allows for more granular control of DNS components, such as authoritative &lt;a href=&quot;https://www.cloudflare.com/learning/dns/dns-server-types/#authoritative-nameserver&quot;&gt;nameservers&lt;/a&gt;. &lt;a href=&quot;https://www.cloudflare.com/learning/dns/glossary/dns-zone/&quot;&gt;Readmore here&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;configure-file-etcbindnamedconflocal&quot;&gt;Configure file: /etc/bind/named.conf.local&lt;/h3&gt;

&lt;p&gt;To configure zones file, nn ServerNode, open the named.conf.local file for editing:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo vi /etc/bind/named.conf.local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add the forward zone with the following lines (substitute the zone name with your own):
In &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/bind/named.conf.local&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zone &quot;test.example.com&quot; {
    type master;
    file &quot;/etc/bind/zones/db.test.example.com&quot;; # zone file path
};

zone &quot;10.10.10.in-addr.arpa&quot; {     # for reverse query
    type master;
    file &quot;/etc/bind/zones/db.10.10.10&quot;;  # 10.10.10.0/24 subnet
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here zone file db.10.10.10 is for reverse query i.e to get domain name from IP.&lt;/p&gt;

&lt;p&gt;If your servers span multiple private subnets but are in the same datacenter, be sure to specify an additional zone and zone file for each distinct subnet. When you are finished adding all of your desired zones, save and exit the named.conf.local file.&lt;/p&gt;

&lt;p&gt;Now that our zones are specified in BIND, we need to create the corresponding forward and reverse zone files.&lt;/p&gt;
&lt;h3 id=&quot;create-forward-zone-file&quot;&gt;Create Forward Zone File&lt;/h3&gt;

&lt;p&gt;The forward zone file is where we define DNS records for forward DNS lookups. That is, when the DNS receives a name query, “fileserver.test.example.com” for example, it will look in the forward zone file to resolve fileservers’s corresponding private IP address.&lt;/p&gt;

&lt;h3 id=&quot;types-of-dns-records&quot;&gt;Types of DNS records:&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;span style=&quot;color:green&quot;&gt; SOA&lt;/span&gt;: An SOA record or Start of Authority record labels a zone file with the name of the host where it was originally created. Next, it lists the contact email address for the person responsible for the domain. There are also various numbers, which we’ll get into in detail in a moment. First, here’s a typical SOA record:
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@	IN	SOA	ns.test.example.com. admin.test.example.com. (
        3		; Serial
   604800		; Refresh
    86400		; Retry
  2419200		; Expire
   604800 )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;Here’s what the numbers mean:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Serial number: The revision number for this domain’s zone file. It changes when the file gets updated.&lt;/li&gt;
  &lt;li&gt;Refresh time: The amount of time (in seconds) a secondary DNS server will keep the zone file before it checks for changes.&lt;/li&gt;
  &lt;li&gt;Retry time: The amount of time a secondary DNS server will wait before retrying a failed zone file transfer.&lt;/li&gt;
  &lt;li&gt;Expire time: The amount of time a secondary DNS server will wait before expiring its current zone file copy if it cannot update itself.&lt;/li&gt;
  &lt;li&gt;Minimum TTL: The minimum amount of time other servers should keep data cached from this zone file.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;span style=&quot;color:green&quot;&gt;NS&lt;/span&gt;:  NS records or name server records set the nameservers for a domain or subdomain. The primary nameserver records for your domain are set both at your registrar and in your zone file. Typical nameserver records (you need at least two) look like this:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;example.com     NS      ns.test.example.com.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;span style=&quot;color:green&quot;&gt;A and AAAA&lt;/span&gt;: An A record points your domain or subdomain to your servers’s IP address, which allows tracffice to reach your server. This is the core function of DNS. A typical A record looks like either of the following:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;example.com             A      12.34.56.78

test.example.com       A       12.34.56.78
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;An AAAA record is just like an A record, but for IPv6 IP addresses. A typical AAAA record looks like the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;example.com     AAAA        0123:4567:89ab:cdef:0123:4567:89ab:cdef
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;span style=&quot;color:green&quot;&gt;CNAME&lt;/span&gt; : A CNAME record or Canonical Name record matches a domain or subdomain to a different domain. With a CNAME record, DNS lookups use the target domain’s DNS resolution as the alias’s resolution. Here’s an example:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alias.com       CNAME   example.com.
example.com     A       12.34.56.78
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;With this setup, when alias.com is requested, the initial DNS lookup will find the CNAME entry with the target of example.com. A new DNS lookup will be started for example.com, which will find the IP address 12.34.56.78. Finally, visitors to alias.com will be directed to 12.34.56.78.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;span style=&quot;color:green&quot;&gt; PTR&lt;/span&gt;: A PTR record or pointer record matches up an IP address to a domain or subdomain, allowing reverse DNS queries to function. It performs the opposite service an A record does, in that it allows you to look up the domain associated with a particular IP address, instead of vice versa.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;PTR records are usually set with your hosting provider. They are not part of your domain’s zone file. This means that you’ll always set reverse DNS for your Linodes in the Linode Manager, even if your nameservers are elsewhere. Likewise, if you have servers somewhere else but are using Linode’s nameservers, you will still have to set up your PTR records with your hosting provider.&lt;/p&gt;

&lt;p&gt;As a prerequisite for adding a PTR record, you need to create a valid, live A or AAAA record that points the desired domain to that IP. If you want an IPv4 PTR record, point the domain or subdomain to your Linode’s IPv4 address. If you want an IPv6 PTR record, point the domain to your Linode’s IPv6 address. Beyond that, IPv4 and IPv6 PTR records work the same way.&lt;/p&gt;

&lt;p&gt;Apart from these there few other types, namely &lt;a href=&quot;https://www.linode.com/docs/networking/dns/dns-records-an-introduction/#mx&quot;&gt;MX&lt;/a&gt;, &lt;a href=&quot;https://www.linode.com/docs/networking/dns/dns-records-an-introduction/#dkim&quot;&gt;DKIM&lt;/a&gt;,&lt;a href=&quot;https://www.linode.com/docs/networking/dns/dns-records-an-introduction/#axfr&quot;&gt;AXFR&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After that bit of theory, let’s create the directory where our zone files will reside. According to our named.conf.local configuration, that location should be /etc/bind/zones:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo mkdir /etc/bind/zones
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We will base our forward zone file on the sample db.local zone file. Copy it to the proper location with the following commands:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ cd /etc/bind/zones
ServerNode$ sudo cp ../db.local ./db.test.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;configure-file-etcbindzonesdbtestexamplecom&quot;&gt;Configure file: /etc/bind/zones/db.test.example.com&lt;/h3&gt;

&lt;p&gt;Now let’s edit our forward zone file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo vi  /etc/bind/zones/db.test.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;so it look like this&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;;
; BIND data file for local loopback interface
;
$TTL	604800
@	IN	SOA	ns.test.example.com. admin.test.example.com. (
			      3		; Serial
			 604800		; Refresh
			  86400		; Retry
			2419200		; Expire
			 604800 )	; Negative Cache TTL

; name servers - NS records
    IN      NS      ns.test.example.com.



; name servers - A records
ns.test.example.com.          IN      A       10.10.10.10

; 10.128.0.0/16 - A records
fileserver.test.example.com.    IN      A      10.10.10.11
client.test.example.com.        IN      A      10.10.10.12
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;create-reverse-zone-files&quot;&gt;Create Reverse Zone File(s)&lt;/h3&gt;

&lt;h3 id=&quot;configure-file-etcbindzonesdbtestexamplecom-1&quot;&gt;Configure file: /etc/bind/zones/db.test.example.com&lt;/h3&gt;

&lt;p&gt;Similarly you can create reverse DNS Zone file &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/bind/zones/db.10.10.10&lt;/code&gt; as:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$TTL	604800
@	IN	SOA	ns.test.example.com. admin.test.example.com. (
			      3		; Serial
			 604800		; Refresh
			  86400		; Retry
			2419200		; Expire
			 604800 )	; Negative Cache TTL

; name servers - NS records
    IN      NS      ns.test.example.com.



; name servers - A records
10           IN     PTR        ns.test.example.com.       ;10.10.10.10

; 10.128.0.0/16 - A records
11           IN     PTR        filserver.test.example.com.  ;10.10.10.11     
12           IN     PTR        client.test.example.com.     ;10.10.10.12  

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We are almost done with configuring the DNS server. DNS configuration file is very obfuscating at times. It wont be be surprizing to miss some configuration so its a good idea to check if the configuration  has been done correctly or not. For this BIND provides checking mechanism&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo named-checkconf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;check Zone files:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo named-checkzone test.example.com db.test.example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Similarly,&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo named-checkzone 10.10.10.in-addr.arpa /etc/bind/zones/db.10.10.10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once that checks out, restart BIND:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ServerNode$ sudo systemctl restart bind9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;testing&quot;&gt;Testing:&lt;/h2&gt;
&lt;p&gt;In order to test our DNS we first need to change the nameserver of the client machine to the DNS server. In ubuntu this can be done by manually editing &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/resov.conf&lt;/code&gt; as&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)
#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
nameserver 10.10.10.10   #DNS Server's ip address
search test.example.com

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you client machine should be able to ping the fileserver host.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vagrant@ClientNode:~$ ping fileserver
PING fileserver.test.example.com (10.10.10.11) 56(84) bytes of data.
64 bytes from filserver.test.example.com (10.10.10.11): icmp_seq=1 ttl=64 time=1.54 ms
64 bytes from filserver.test.example.com (10.10.10.11): icmp_seq=2 ttl=64 time=1.04 ms
64 bytes from filserver.test.example.com (10.10.10.11): icmp_seq=3 ttl=64 time=1.46 ms
64 bytes from filserver.test.example.com (10.10.10.11): icmp_seq=4 ttl=64 time=0.960 ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Voila!!&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;https://www.digitalocean.com/community/tutorials/how-to-configure-bind-as-a-private-network-dns-server-on-ubuntu-16-04
https://www.ntchosting.com/encyclopedia/dns/zone/#The_DNS_zone
https://www.linode.com/docs/networking/dns/dns-records-an-introduction/#dkim
https://www.slashroot.in/difference-between-iterative-and-recursive-dns-query&lt;/p&gt;</content><author><name>Bikram Dhoju</name><email>bikram.dhoju@gmail.com</email><uri>https://bdhoju.com</uri></author><category term="Internet" /><category term="DNS" /><category term="Javascript" /><summary type="html">We already dived into the nitty gritty of the theory about what exactly it is, how it works and what are its parts you can read the part one here. In this series, I will be talking about how to set up a private DNS server using BIND9. Before that, I want to focus on Private and Public DNS.</summary></entry><entry><title type="html">DNS :Introduction (DNS Series:Part I)</title><link href="http://0.0.0.0:4000/network&system/DNS-Series-1/" rel="alternate" type="text/html" title="DNS :Introduction (DNS Series:Part I)" /><published>2018-06-17T00:00:00+00:00</published><updated>2018-03-20T20:00:58+00:00</updated><id>http://0.0.0.0:4000/network&amp;system/DNS-Series-1</id><content type="html" xml:base="http://0.0.0.0:4000/network&amp;system/DNS-Series-1/">&lt;p&gt;There are many servers all over the world. Every server has a unique IP Address and is identified by that IP Address. That brings us to the bulk of the IP address. And you the p&lt;a href=&quot;http://www.thememoryinstitute.com/remembering-numbers.html&quot;&gt;problem with numbers they hard to remember&lt;/a&gt; due to their intangibility, the human has always struggled to come with the ways of avoiding the problem of remembering them. Long story short, remembering www.google.com is far easier than remembering 74.125.24.139 unless you are suffering from &lt;a href=&quot;http://hyperthymesia.net/hyperthymesia/&quot;&gt;Hyperthymesia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When you visit https://google.com in a browser, your computer uses DNS to retrieve the website’s IP address of 74.125.24.139, in just a split of a second. Without DNS, you would only be able to visit Google’s website (or any website) by visiting its IP address directly, such as http://74.125.24.139. Hence, DNS is fundamentally the backbone bone of the internet.&lt;/p&gt;

&lt;h2 id=&quot;so-what-eactly-is-dns&quot;&gt;So, what eactly is DNS?&lt;/h2&gt;

&lt;p&gt;Remember how you used to have those phonebook diaries where you put the name and phone number corresponding to them. This diary acts like a map for the name to corresponding phones. DNS is like a phone book for the internet. If you know a person’s name but don’t know their telephone number, you can simply look it up in a phone book. DNS provides this same service to the internet, of course, they are much more complex then phonebook but at a basic level, they have the same function.&lt;/p&gt;

&lt;p&gt;When you visit https://google.com in a browser, your computer uses DNS to retrieve the website’s IP address of 74.125.24.139, in just a split of second. Without DNS, you would only be able to visit google’s website (or any website) by visiting its IP address directly, such as http://74.125.24.139.&lt;/p&gt;

&lt;p&gt;Hence, DNS is fundamentally the backbone bone of the internet.&lt;/p&gt;

&lt;h2 id=&quot;why-dns-is-important&quot;&gt;Why DNS Is Important?&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Web browsers interact through Internet Protocol (IP) addresses.&lt;/li&gt;
  &lt;li&gt;Elimination of the need for humans to memorize complex IP addresses.&lt;/li&gt;
  &lt;li&gt;For many reasons, server’s ip needs to be changed, so DNS helps in eliminating those problem of working about any changes in underlying system.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;## DNS hierachy&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.dailywebsolutions.com/images/DNS-hierarchy.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-1-root-level--zone-servers-&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; 1. Root Level / zone servers &lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;It is the highest level in DNS hierarchy. The first step in resolving the domain name is root servers. It provides a list of authoritative name servers for top level domain (TLD). These servers have the list of all top level domains (TLDs). There are 13 root DNS servers all over the world. These root servers are named as A-root server, B-root server and so on upto K-root server. Root servers hold the information of each TLD that where is it located and what is its IP Address.&lt;/p&gt;

&lt;p&gt;If you want more information about root servers that where are they located and who owns them or any other info, then you need to go http://www.root-servers.org.&lt;/p&gt;

&lt;h3 id=&quot;-2-top-level-domains-tld&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; 2. Top Level Domains (TLD)&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;TLD is at the 2nd highest level domains in the hierarchical Domain Name System of the Internet. Top level domains are .com, .org, .edu etc. It will make more sense, if you take a look at DNS hierarchy diagram.&lt;/p&gt;

&lt;h3 id=&quot;-3-second-level-domains&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; 3. Second Level domains&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;It is 3rd level in the hierarchical Domain Name System of the internet. It is directly below the TLD. dailywebsolutions.com is an example of second level domains because it is directly below .com TLD.&lt;/p&gt;

&lt;h3 id=&quot;-4-sub-domain&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; 4. Sub-Domain&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Sub domain is considered as the part of the second level domains. Let’s consider mail.dailywebsolutions.com, here mail is the sub domain of a 2nd level domain dailywebsolutions and .com is the TLD.&lt;/p&gt;

&lt;h2 id=&quot;how-dns-works&quot;&gt;How DNS works?&lt;/h2&gt;

&lt;h3 id=&quot;-step-1-request-information-&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; Step 1: Request information &lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The process begins when you ask your computer to resolve a hostname, such as visiting https://dyn.com. The first place your computer looks for the corresponding IP address is its local DNS cache, which stores information that your computer has recently retrieved.&lt;/p&gt;

&lt;p&gt;If your computer doesn’t already know the answer, it needs to perform a DNS query to find out.&lt;/p&gt;

&lt;h3 id=&quot;-step-2-ask-the-recursive-dns-servers&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; Step 2: Ask the recursive DNS servers&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;If the information is not stored locally, your computer queries (contacts) the recursive DNS servers (resolvers) from your internet service provider (ISP). These specialized computers perform the legwork of a DNS query on your behalf. Resolvers have their own caches, and given that many of the ISP’s customers are using the same resolvers, there is a reasonable chance that popular domains will already be cached. If this is the case for our example, dyn.com, the process usually ends here and the information is returned to the user.&lt;/p&gt;

&lt;p&gt;Just about every ISP runs their own resolvers, yet those aren’t necessarily what you could be using. Some companies and perhaps even technically sophisticated home users could run their own resolvers on site. Additionally, there are several very popular open resolvers available, including Google Public DNS, OpenDNS, Dyn Recursive DNS, and Quad9.&lt;/p&gt;

&lt;h3 id=&quot;-step-3-ask-the-root-name-servers&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; Step 3: Ask the root name servers&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;If the recursive servers don’t have the answer, they query the root name servers. A name server is a computer that answers questions about domain names, such as IP addresses. These 13 servers act as a kind of telephone switchboard for DNS. They don’t know the answer, but they can direct DNS queries to someone that knows where to find it.&lt;/p&gt;

&lt;h3 id=&quot;-step-4-ask-the-tld-name-servers-&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; Step 4: Ask the TLD name servers &lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The root name servers will look at the first part of our request, reading from right to left — www.dyn.com — and in our case, direct our query to the top-level domain (TLD) name servers for .com. Each TLD, such as those for .com, .org, and .us, has its own set of name servers, which act like a receptionist for each TLD. These servers don’t have the information we need, but they can refer us directly to the servers that do have the information.&lt;/p&gt;

&lt;h3 id=&quot;-step-5-ask-the-authoritative-dns-servers&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; Step 5: Ask the authoritative DNS servers&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The TLD name servers review the next part of our request — www.dyn.com — and direct our query to the name servers responsible for this specific domain. These authoritative name servers are responsible for knowing all the information about a specific domain, which is stored in DNS records. There are many types of records, which each contain a different kind of information.&lt;/p&gt;

&lt;p&gt;In this example, we want to know the IP address for www.dyn.com, so we ask the authoritative name server for the address record (A record). Some authoritative name servers have intelligence that can analyze an incoming DNS query and return a response that is more performant for the user that originated the query.&lt;/p&gt;

&lt;h3 id=&quot;-step-6-retrieve-the-record&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; Step 6: Retrieve the record&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The recursive server retrieves the A record for dyn.com from the authoritative name servers and stores the record in its local cache. If anyone else requests the host record for dyn.com, the recursive server will already have the answer and will not need to go through the lookup process again. All records have a time-to-live value, which is like an expiration date. After a while, the recursive server will need to ask for a new copy of the record to make sure the information doesn’t become out-of-date.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:green&quot;&gt; Step 7: Receive the answer&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Armed with the answer, recursive server returns the A record back to your computer. Your computer stores the record in its cache, reads the IP address from the record, then passes this information to your browser. The browser then opens a connection to the webserver and receives the website.&lt;/p&gt;

&lt;p&gt;This entire process, from start to finish, takes only milliseconds to complete.&lt;/p&gt;

&lt;p&gt;More:  https://www.verisign.com/en_US/website-presence/online/how-dns-works/index.xhtml gives more interactive way to understand DNS&lt;/p&gt;

&lt;h2 id=&quot;-references-span&quot;&gt;**&lt;span style=&quot;color:green&quot;&gt; References /span&amp;gt;**&lt;/span&gt;&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;https://dyn.com/blog/dns-why-its-important-how-it-works/&lt;/li&gt;
  &lt;li&gt;http://www.dailywebsolutions.com/what-is-DNS-and-DNS-hierarchy&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Bikram Dhoju</name><email>bikram.dhoju@gmail.com</email><uri>https://bdhoju.com</uri></author><category term="Internet" /><category term="DNS" /><category term="Javascript" /><summary type="html">There are many servers all over the world. Every server has a unique IP Address and is identified by that IP Address. That brings us to the bulk of the IP address. And you the pproblem with numbers they hard to remember due to their intangibility, the human has always struggled to come with the ways of avoiding the problem of remembering them. Long story short, remembering www.google.com is far easier than remembering 74.125.24.139 unless you are suffering from Hyperthymesia.</summary></entry><entry><title type="html">Bringing Raspberry Pi to Classroom</title><link href="http://0.0.0.0:4000/edtech/Bringing-RPi-to-Classroom/" rel="alternate" type="text/html" title="Bringing Raspberry Pi to Classroom" /><published>2018-02-16T00:00:00+00:00</published><updated>2018-03-20T20:00:58+00:00</updated><id>http://0.0.0.0:4000/edtech/Bringing-RPi-to-Classroom</id><content type="html" xml:base="http://0.0.0.0:4000/edtech/Bringing-RPi-to-Classroom/">&lt;p&gt;There is so much going on in technology these days. Technology has brought unprecedented changes in our daily life, retooling the way we communicate, the way we shop, the way we make our living and more. The things that were considered as science-fiction a few years ago, is now a real thing. But, compare the classrooms back in the 90s and now, do you see any change? For the major part, it’s more or less the same. It’s a no-brainer that we have been scared to adopt new technology to our classrooms. It is said that Socrates was scared of this new technology called “writing” which he thought would erode the memorizing power of human. There was a time when people were intimidated by the use of the calculator in the class, for it may jeopardize the calculating power of the human brain. Nevertheless, we cannot overlook the fact of how technology can be leveraged to extend the knowledge imparting process, for education today is not about what-you-know, but what you can do with what-you-know. With growing MOOCs and learning materials available over the Internet, that are not only adding the new dimension in learning today, but also making the learning process more fun. Also, the students today are more adept in using technology, so taking technology out of the learning equation would be alienating the student of their abilities.&lt;/p&gt;

&lt;p&gt;At &lt;a href=&quot;http://olenepal.org&quot;&gt;OLE Nepal&lt;/a&gt;, we strive to bring the best new technology to our classrooms. It’s never easy to embrace a new piece of technology, for teachers are resistant to the change, with factors like power cuts and budget making up a huge share of challenge. So we set our selection of the technology based on the 3 prime constraints; low-powered, portable, and low cost. And for these traits, Raspberry Pi steps up as the knight in shining armor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*xnQWux2pqa2H1qPDi-f4_w.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Produced in Cambridge, &lt;a href=&quot;https://en.wikipedia.org/wiki/Raspberry_Pi&quot;&gt;Raspberry Pi&lt;/a&gt; primarily designed to demystify the technology in the classrooms for the learners, is a credit-card sized computer that costs only $35. The device plugs into a computer monitor or TV, and uses a standard keyboard and mouse. You can use this mini computer just like you would your desktop computer to do everything from browsing the Internet and playing high-definition video, to making spreadsheets, word-processing, or playing games.&lt;/p&gt;

&lt;h2 id=&quot;how-is-ole-nepal-using-raspberry-pi&quot;&gt;How is OLE Nepal using Raspberry Pi?&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*_0sm75N6aVaoBRVWxfGAlQ.png&quot; alt=&quot;Typical E-Pustakalaya lab setup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Predominantly we build Pustakalaya Server, which is typically a mini PC, hosting educational contents major section which is the &lt;a href=&quot;http://www.olenepal.org/E-Pustakalaya/&quot;&gt;E-Pustakalaya&lt;/a&gt; , which is digital library of more than 7000+ books of different genre build on the FEDORA (or Flexible Extensible Digital Object Repository Architecture) digital asset management (DAM) architecture upon which institutional repositories, digital archives, and digital library systems are built. We also have added to it our home-brewed, curriculum-based interactive teaching material; &lt;a href=&quot;http://www.olenepal.org/E-Paath/&quot;&gt;E-Paath&lt;/a&gt;, off-line Khan Academy videos, Open-street map, Nepali Sabdakosh, &lt;a href=&quot;https://phet.colorado.edu/en/simulations/&quot;&gt;PheT simulations&lt;/a&gt; and much more, with a regular update to books and educational content. Basically, Pustakalaya Server is the offline version of the pustakalaya.org. It’s more like bringing the Internet to your classroom.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*DE2qHIwaXbZspeF_4Z3s7A.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After successful implementation of the &lt;a href=&quot;http://wiki.laptop.org/go/The_OLPC_Wiki&quot;&gt;XO&lt;/a&gt; and desktops computer as the client machine, Raspberry Pi, with its amazing community, is a pertinent technology to bring in our classrooms. We have been tinkering the popular Debian-based Linux-distro, Ubuntu-Mate. With its active popular community, it is best OS to our option. We have preloaded E-Paath content into the OS itself. Since most of the activities in our E-Paath are currently flash based; flash support was an important feature to have in the OS. Debian-based OS have much better flash support, it was another reason why Ubuntu-Mate was used. We also have loaded &lt;a href=&quot;http://pustakalaya.org/external-content/static/balpathmala/&quot;&gt;BalPaathmala&lt;/a&gt;, which is a small repository of the books, into the OS hosted on Apache web server. We have been customizing the OS to make it more educational with the interactive games. Our work so far is just a tip of an iceberg.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*nO4BiJ7KvfrrB_WaVLWafA.png&quot; alt=&quot;Raspberry Pi Desktop&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*0zby0zK0tdk-35nBfX0xkg.png&quot; alt=&quot;Class 7–8 EPaath interface&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Some of the features we are currently working on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Synchronization with Server.&lt;/li&gt;
  &lt;li&gt;Student activity statistics collection in Server.&lt;/li&gt;
  &lt;li&gt;Auto-running mount scripts.&lt;/li&gt;
  &lt;li&gt;Using docker or lxc containers for the installation and upgrades.&lt;/li&gt;
  &lt;li&gt;Awstats collection&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;where-is-this-being-implemented&quot;&gt;Where is this being implemented?&lt;/h2&gt;

&lt;p&gt;We have initiated a pilot program at Gorakhnath Secondary School, Kirtipur,Nepal, where 18 Raspberry Pi with preloaded educational content was deployed. It was a challenging experience as it was a-first-of-its-kind of deployment for us. We had a 5-day training for the teachers about pedagogy as well as the technical aspects of using the Raspberry Pi in the classroom. The primary purpose of the training was to inculcate, amongst the teachers, a culture of referring to additional reference materials. Looking at the excitement of the teachers, its just seems that ‘direction’ and ‘training’ were what was stopping technology from getting into their classrooms. We also installed the battery backup system for an uninterrupted flux of the lab. We are regularly providing technical support for the class as this is a pilot project for us.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*vhdX4aNtKnP8Au-tOV3Kkg.jpeg&quot; alt=&quot;Students taking EPaath Class&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*RoCBe-ivsq11PeuxVbo1vQ.jpeg&quot; alt=&quot;Raspberry Pi Lab Setup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Originally published in &lt;a href=&quot;http://blog.olenepal.org/index.php/archives/2067&quot;&gt;OLE-Blog&lt;/a&gt;. If you like what you read please follow.&lt;/p&gt;</content><author><name>Bikram Dhoju</name><email>bikram.dhoju@gmail.com</email><uri>https://bdhoju.com</uri></author><category term="RaspberryPi" /><summary type="html">There is so much going on in technology these days. Technology has brought unprecedented changes in our daily life, retooling the way we communicate, the way we shop, the way we make our living and more. The things that were considered as science-fiction a few years ago, is now a real thing. But, compare the classrooms back in the 90s and now, do you see any change? For the major part, it’s more or less the same. It’s a no-brainer that we have been scared to adopt new technology to our classrooms. It is said that Socrates was scared of this new technology called “writing” which he thought would erode the memorizing power of human. There was a time when people were intimidated by the use of the calculator in the class, for it may jeopardize the calculating power of the human brain. Nevertheless, we cannot overlook the fact of how technology can be leveraged to extend the knowledge imparting process, for education today is not about what-you-know, but what you can do with what-you-know. With growing MOOCs and learning materials available over the Internet, that are not only adding the new dimension in learning today, but also making the learning process more fun. Also, the students today are more adept in using technology, so taking technology out of the learning equation would be alienating the student of their abilities.</summary></entry><entry><title type="html">Intrusion Dectection system with Fail2ban</title><link href="http://0.0.0.0:4000/network&system/Intrusion-Detection-System-with-Fail2Ban/" rel="alternate" type="text/html" title="Intrusion Dectection system with Fail2ban" /><published>2017-10-12T00:00:00+00:00</published><updated>2018-03-20T20:00:58+00:00</updated><id>http://0.0.0.0:4000/network&amp;system/Intrusion-Detection-System-with-Fail2Ban</id><content type="html" xml:base="http://0.0.0.0:4000/network&amp;system/Intrusion-Detection-System-with-Fail2Ban/">&lt;p&gt;Install and configure fail2ban to stop some hacking/DOS (Denial of Service) attempts on Pustakalaya Server. As this site’s been hit by the occasional DOS from people with an axe to grind and too much time on their hands,fail2ban is lifesaver. Please follow the steps below:&lt;/p&gt;

&lt;h2 id=&quot;step-1-installation&quot;&gt;Step 1: Installation&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Install fail2ban through the method of your choice.&lt;/li&gt;
  &lt;li&gt;Edit the file /etc/fail2ban/jail.local and add the following section: {if jail.local not present then create it}
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;enabled = true
port = http,https
filter = http-get-dos
logpath = /var/log/apache2/access.log
# maxretry is how many GETs we can have in the findtime period before getting narky
maxretry = 300
# findtime is the time period in seconds in which we're counting &quot;retries&quot; (300 seconds = 5 mins)
findtime = 300
# bantime is how long we should drop incoming GET requests for a given IP for, in this case it's 5 minutes
bantime = 300
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Now we need to create the filter file, so create the file /etc/fail2ban/filters.d/http-get-dos.conf and place the following contents in it:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; #
   # Author: http://www.go2linux.org
   #
   [Definition]

   # Option: failregex
   # Note: This regex will match any GET entry in your logs, so basically all valid and not valid entries are a match.
   # You should set up in the jail.conf file, the maxretry and findtime carefully in order to avoid false positives.

   failregex = ^&amp;lt;HOST&amp;gt; -.*&quot;(GET|POST).*

   # Option: ignoreregex
   # Notes.: regex to ignore. If this regex matches, the line is ignored.
   # Values: TEXT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Now we just need to restart fail2ban for the new jail &amp;amp; filter to come into affect:&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   /etc/init.d/fail2ban restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-2-testing&quot;&gt;Step 2: Testing&lt;/h2&gt;

&lt;p&gt;If you want to test if it’s really working, a nice way to do so is to use ab (Apache Benchmark – part of the apache2-utils package), like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ab -n 500 -c 10 http://your-web-site-dot-com/

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will kick off 500 page-loads in 10 concurrent connections against your site. When the ban kicks in the page-loads will stop (as incoming GET requests from your IP will be dropped), then when the bantime expires you’ll be able to access the site again. If you then take a look in your /var/log/fail2ban.log file you should see something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2013-06-22 05:37:21,943 fail2ban.actions: WARNING [http-get-dos] Ban YOUR_IP_ADDRESS
2013-06-22 05:42:22,341 fail2ban.actions: WARNING [http-get-dos] Unban YOUR_IP_ADDRESS
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Bikram Dhoju</name><email>bikram.dhoju@gmail.com</email><uri>https://bdhoju.com</uri></author><category term="security" /><summary type="html">Install and configure fail2ban to stop some hacking/DOS (Denial of Service) attempts on Pustakalaya Server. As this site’s been hit by the occasional DOS from people with an axe to grind and too much time on their hands,fail2ban is lifesaver. Please follow the steps below:</summary></entry></feed>